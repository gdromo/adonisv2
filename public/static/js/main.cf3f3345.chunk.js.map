{"version":3,"sources":["datos/Config.js","autocompletarMutual/autocompletarMutual.js","paciente/paciente.js","autocompletarEstudio/autocompletarEstudio.js","autocompletarPrestador/autocompletarPrestador.js","autocompletarEspecialidad/autocompletarEspecialidad.js","turnoHorarios/turnosHorarios.js","turnoDias/turnoDias.js","turnoDetalle/turnosDetalle.js","turno/turnos.js","PageError/PageError.js","login/login.js","buscarporNombre/buscarporNombre.js","turnoPaciente/turnoPaciente.js","App.js","serviceWorker.js","index.js"],"names":["urlRest","options","token","autocompletarMutual","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","selectedOption","setState","onSelectMutual","TraerMutuales","cart","config","headers","Authorization","concat","axios","get","then","response","data","length","i","value","codigo","label","nombre","mutuales","catch","e","console","log","state","sessionStorage","getItem","next_props","undefined","MutualBusq","mutualSeleccionada","react_default","a","createElement","react_select_browser_esm","onChange","placeholder","React","Component","EMAIL_REGEX","RegExp","Paciente","valueToState","_ref","id","checked","type","pacienteNombre","pacienteApellido","pacienteDni","codPaciente","pacienteMutual","pacienteMutualNombre","pacienteEmail","pacienteMutualAfiliado","pacienteNacimiento","pacienteCelular","pacienteTelefono","defineProperty","TraerMutual","Mutual","mutualBusq","pacienteCargando","validacionError","ErrorEmail","ErrorCelular","ErrorMensaje","UsuarioLogueado","loading","handleSubmit","bind","assertThisInitialized","handleBlur","event","paciente","apellido","documentoNro","documentoTipo","email","hc","mutual","mutualAfiliado","mutualNombre","nacimiento","telefono","telefono2","actualizarPaciente","preventDefault","key","target","buscarporNombre","traerPacientes","_ref3","validarEmail","validarCelular","traerMutuales","validar","dni","_this2","moment","format","alert","Codigo","_this3","render","test","numero","substr","actualizarPacienteEstado","post","status","error","put","history","push","pathname","Usuario","NombreBusq","Busqueda","pacienteLocal","location","PacienteDni","_this4","lib","fluid","onClick","LoadingOverlay_default","active","spinner","text","xs","md","Card_default","CardHeader_default","title","subheader","CardContent_default","onSubmit","Typography_default","variant","gutterBottom","TextField_default","margin","autoComplete","autoFocus","required","onBlur","onKeyPress","handleKeyPress","fullWidth","Button_default","className","color","turnosPaciente","src_autocompletarMutual_autocompletarMutual","InputLabelProps","shrink","name","end","size","Icon_default","disabled","CircularProgress_default","autocompletarEstudio","onSelectEstudio","TraerEstudios","estudios","estudioSeleccionado","onKeyDown","autocompletarPrestador","onSelectPrestador","TraerPrestadores","prestadores","prestadorSeleccionado","handleChangeEspecialidades","selectedEspecialidades","AbuscarPrestador","filter","prestador","especialidad","prestadoresFiltro","selectedPrestador","handleChangePrestador","onSelectEspecialidad","TraerEspecialidades","especialidades","especialidadSeleccionada","_this$state","ButtonVerde","withStyles","theme","root","palette","getContrastText","green","backgroundColor","width","&:hover","Button","TurnosHorarios","seleccionarTurno","turno","onSelectTurno","Abuscar","turnos","fecha","strToComponentsTurnos","map","hora","onSelectFecha","fechas","TurnoFechas","turnoDias_ButtonVerde","TurnoDetalle","CerrarmsjConfirmar","msjConfirmar","TurnoConfimado","ConfirmarmsjConfirmar","turnoAbuscar","fechaEstudio","actualizarTurno","CerrarmsjTurnoConfirmado","msjTurnoConfirmado","CerrarmsjError","mensajeError","TraerTurno","TurnoCod","codTurno","TraerFecha","fechaTurno","AbuscarTurno","turnosDisponibles","fechaSeleccionada","turnoAbuscarHora","codEstudio","estudioNombre","codPrestador","codEspecialidad","optionEstudio","fechasTurnos","msjTurnoConfirmadoMsj","open","msj","TraerEstudio","TraerPrestador","TraerEspecilidad","EstudioCod","PrestadorCod","EspecilidadCod","PacienteLocal","traerTurnosEstudios","traerTurnosPrestador","traerTurnosEspecialidad","respuesta","TurnosEstudios","AgruparArrayFecha","TurnosPrestador","TurnosEspecialidad","miarray","Fechas","forEach","item","findIndex","itemBuscado","actualizarTurnoEstado","estudioCod","url","estudio","dioturno","src_autocompletarEstudio_autocompletarEstudio","src_autocompletarPrestador_autocompletarPrestador","autocompletarEspecialidad","FormControl_default","RadioGroup_default","FormControlLabel_default","control","Radio_default","turnosHorarios","turnoDias","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","equipoNom","prestadorNom","DialogActions_default","Turno","style","fontSize","turnosDetalle","withRouter","PageError","background","boxShadow","height","cyan","Fab","Login","LoginUsuario","errorUsuario","errorPassword","usuario","password","loginUsuario","errorPasswordMsj","cargandoLogin","removeItem","LoginUsuarioEstado","LoginUsuarioToken","nombreUsuario","setItem","nombreCompleto","center","sm","login_ButtonVerde","BuscarporNombre","pacientesBusqueda","nombreBuscar","pacientesCargados","Pacientes","seleccion","BuscarPacientes","maxWidth","dist_default","columns","field","actions","icon","tooltip","rowData","seleccionarPacientes","TurnoPaciente","CerrarModal","ventanaModal","ConfirmarModal","cancelarTurno","QuitarTurno","TurnosFiltro","turnoBorrar","Turnos","equipoCod","estudioNom","dioTurno","aCancelar","mutualNom","cancelarTurnoEstado","traerTurnoPacientes","borrar","App","react_router_dom","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oTACIA,SAAU,kNCOVC,EAAU,GACVC,EAAQ,GAqHGC,cAjHb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQRQ,aAAe,SAACC,GAEdR,EAAKS,SAAS,CAAED,mBAChBR,EAAKD,MAAMW,eAAeF,IAZTR,EAmDnBW,cAAgB,WACd,IAAKC,EAAO,GACRC,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BnB,KAGrCoB,IAAMC,IAAN,GAAAF,OAAarB,EAAb,YAAgCkB,GAC7BM,KAAK,SAAAC,GAKJ,GAA8B,IAAzBA,EAASC,KAAKC,OAAc,CAC/B,IAAIC,EACJ,IAAKA,EAAI,EAAGA,EAAIH,EAASC,KAAKC,OAAQC,IAEpCX,EAAKW,GAAK,CACRC,MAAQJ,EAASC,KAAKE,GAAGE,OACzBC,MAAQN,EAASC,KAAKE,GAAGI,QAO7B3B,EAAKS,SAAS,CACZmB,SAAShB,OAQdiB,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,aAtFtBpB,EAAKiC,MAAQ,CACXzB,eAAgB,KAChBoB,SAAS,IAJM5B,mFAkBjBH,EAAQqC,eAAeC,QAAQ,uBAC/BhC,KAAKQ,kEAGmByB,GAIxB,QAA8BC,IAA1BD,EAAWE,YAAsD,OAA1BF,EAAWE,WACtD,CACE,QAAqCD,IAAjCD,EAAWE,WAAWX,OACxB,CACE,IAAIY,EAIJA,EAAqB,CACnBf,MAAMY,EAAWE,WAAWb,OAC5BC,MAAMU,EAAWE,WAAWX,QAE9BxB,KAAKM,SAAS,CAACD,eAAgB+B,SAEEF,IAAjCD,EAAWE,WAAWX,QAMtBxB,KAAKM,SAAS,CAACD,eAAgB4B,EAAWE,+CA8CzC,IACC9B,EAAmBL,KAAK8B,MAAxBzB,eAMR,OADEZ,EAAUO,KAAK8B,MAAML,SAErBY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnB,MAAOhB,EACPoC,SAAUzC,KAAKI,aACfX,QAASA,EACTiD,YAAY,kCA1GYC,IAAMC,6BCclCC,EAAc,IAAIC,OAAO,8GAE3BpD,EAAQ,GAw2BGqD,cAj2Bb,SAAAA,IAAc,IAAAlD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACZlD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,QA0WFgD,aAAe,SAAAC,GAAkC,IAA/BC,EAA+BD,EAA/BC,GAAI7B,EAA2B4B,EAA3B5B,MAAO8B,EAAoBF,EAApBE,QAASC,EAAWH,EAAXG,KAEzB,gBAAPF,GACFrD,EAAKS,SAAS,CACZ+C,eAAgB,GAChBC,iBAAiB,GACjBC,YAAa,GACbC,YAAa,KACbC,eAAgB,GAChBC,qBAAsB,GACtBC,cAAe,GACfC,uBAAuB,GACvBC,mBAAoB,aACpBC,gBAAiB,GACjBC,iBAAkB,KAItBlE,EAAKS,SAAS,WACZ,OAAOR,OAAAkE,EAAA,EAAAlE,CAAA,GAAGoD,EAAc,aAATE,EAAsBD,EAAU9B,MA9XrCxB,EAkYdoE,YAAc,SAACC,GAEbrE,EAAKS,SAAS,CAAEmD,eAAgBS,EAAO7C,MACvBqC,qBAAsBQ,EAAO3C,MAC7B4C,WAAY,QApY5BtE,EAAKiC,MAAQ,CACbuB,eAAgB,GAChBC,iBAAiB,GACjBC,YAAa,GACba,kBAAkB,EAClBZ,YAAa,KACbC,eAAgB,GAChBC,qBAAsB,GACtBC,cAAe,GACfC,uBAAuB,GACvBC,mBAAoB,aACpBC,gBAAiB,GACjBC,iBAAkB,GAClBM,iBAAiB,EACjBC,YAAY,EACZC,cAAc,EACdC,aAAc,GACdL,WAAY,KACZM,gBAAgB,KAChBC,SAAQ,GAGR7E,EAAK8E,aAAe9E,EAAK8E,aAAaC,KAAlB9E,OAAA+E,EAAA,EAAA/E,CAAAD,IAEpBA,EAAKiF,WAAajF,EAAKiF,WAAWF,KAAhB9E,OAAA+E,EAAA,EAAA/E,CAAAD,IA1BNA,4EAgCDkF,GAGX,IAAIC,EAAW,GACfhF,KAAKM,SAAS,CAAEoE,SAAQ,IAExBM,EAASC,SAAUjF,KAAK8B,MAAMwB,iBAC9B0B,EAASxD,OAAQxB,KAAK8B,MAAMuB,eAC5B2B,EAAS1D,OAAQtB,KAAK8B,MAAM0B,YAC5BwB,EAASE,aAAclF,KAAK8B,MAAMyB,YAClCyB,EAASG,cAAe,EACxBH,EAASI,MAAOpF,KAAK8B,MAAM6B,cAC3BqB,EAASK,GAAIrF,KAAK8B,MAAMyB,YACxByB,EAASM,OAAQtF,KAAK8B,MAAM2B,eAC5BuB,EAASO,eAAgBvF,KAAK8B,MAAM8B,uBACpCoB,EAASQ,aAAcxF,KAAK8B,MAAM4B,qBAClCsB,EAASS,WAAYzF,KAAK8B,MAAM+B,mBAChCmB,EAASU,SAAU1F,KAAK8B,MAAMiC,iBAC9BiB,EAASW,UAAW3F,KAAK8B,MAAMgC,gBAE/B9D,KAAK4F,mBAAmBZ,GAExBD,EAAMc,wDASOC,GAIE,UAAXA,EAAIA,MACgB,qBAAlBA,EAAIC,OAAO7C,IAA+C,mBAAlB4C,EAAIC,OAAO7C,IAEtB,KAA3BlD,KAAK8B,MAAMyB,aAGbvD,KAAKgG,kBAGa,gBAAlBF,EAAIC,OAAO7C,IAEkB,KAA3BlD,KAAK8B,MAAMyB,aAEsB,KAAhCvD,KAAK8B,MAAMwB,kBAAyD,KAA9BtD,KAAK8B,MAAMuB,gBAElDrD,KAAKiG,eAAejG,KAAK8B,MAAMyB,oDAYjB,IAAZL,EAAYgD,EAAZhD,GAAI7B,EAAQ6E,EAAR7E,MAOd,OAAQ6B,GACN,IAAK,cAEgC,KAAhClD,KAAK8B,MAAMwB,kBAAyD,KAA9BtD,KAAK8B,MAAMuB,gBAElDrD,KAAKiG,eAAe5E,GAGtB,MACF,IAAK,gBACY,KAAVA,EACLrB,KAAKmG,aAAa9E,GAEhBrB,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBC,YAAY,EACZE,aAAc,KAGlB,MACF,IAAK,kBACY,KAAVnD,EACHrB,KAAKoG,eAAe/E,GAEpBrB,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBE,cAAc,EACdC,aAAc,KAIlB,MACF,IAAK,iBAEHxE,KAAKqG,cAAchF,GAQrBrB,KAAKsG,QAAQpD,EAAI7B,mCAIb6B,EAAI7B,GAEV,OAAQ6B,GACN,IAAK,cAEH,MACF,IAAK,gBACY,KAAV7B,EACLrB,KAAKmG,aAAa9E,GAEhBrB,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBC,YAAY,EACZE,aAAc,KAGlB,MACF,IAAK,kBACY,KAAVnD,EACHrB,KAAKoG,eAAe/E,GAEpBrB,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBE,cAAc,EACdC,aAAc,qFAYJ+B,mFAKhB7F,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BnB,KAEzB,KAAR6G,yBAEFvG,KAAKM,SAAS,CACZ8D,kBAAkB,aAOdtD,IAAMC,IAAN,GAAAF,OAAarB,EAAb,yBAAAqB,OAA4C0F,GAChD7F,GACCM,KAAK,SAAAC,GAG4B,IAAzBA,EAASC,KAAKC,QAajBqF,EAAKH,cAA2C,OAA5BpF,EAASC,KAAK,GAAGoE,OAAiBrE,EAASC,KAAK,GAAGoE,OAAO,IAC9EkB,EAAKlG,SAAS,CACZ8D,kBAAkB,IAGpBoC,EAAKlG,SAAS,CACZ+C,eAA6C,OAA5BpC,EAASC,KAAK,GAAGM,OAAiBP,EAASC,KAAK,GAAGM,OAAO,GAC3E8B,iBAAiD,OAA9BrC,EAASC,KAAK,GAAG+D,SAAmBhE,EAASC,KAAK,GAAG+D,SAAS,GACjF1B,YAAgD,OAAlCtC,EAASC,KAAK,GAAGgE,aAAuBjE,EAASC,KAAK,GAAGgE,aAAa,GACpFpB,gBAAiD,OAA/B7C,EAASC,KAAK,GAAGyE,UAAoB1E,EAASC,KAAK,GAAGyE,UAAU,GAClFlC,eAA8C,OAA7BxC,EAASC,KAAK,GAAGoE,OAAkBrE,EAASC,KAAK,GAAGoE,OAAO,GAC5E5B,qBAAyD,OAAlCzC,EAASC,KAAK,GAAGsE,aAAuBvE,EAASC,KAAK,GAAGsE,aAAa,GAC7F5B,uBAA6D,OAApC3C,EAASC,KAAK,GAAGqE,eAAyBtE,EAASC,KAAK,GAAGqE,eAAe,GACnGxB,iBAAiD,OAA9B9C,EAASC,KAAK,GAAGwE,SAAmBzE,EAASC,KAAK,GAAGwE,SAAS,GACjFlC,YAAyC,OAA5BvC,EAASC,KAAK,GAAGI,OAAiBL,EAASC,KAAK,GAAGI,OAAO,GACvEqC,cAA2C,OAA3B1C,EAASC,KAAK,GAAGkE,MAAgBnE,EAASC,KAAK,GAAGkE,MAAM,GACxEvB,mBAAqD,OAAhC5C,EAASC,KAAK,GAAGuE,YACnCgB,EAAOxF,EAASC,KAAK,GAAGuE,YAAYiB,OAAO,cAAgB,aAC1DD,EAAOxF,EAASC,KAAK,GAAGuE,YAAYiB,OAAO,cAI7C,gBAOJC,MAAM,wEAGXjF,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,mBAEpBjB,KAAKM,SAAS,CACV8D,kBAAkB,6IAObwC,GAAQ,IAAAC,EAAA7G,KACjBU,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2Bb,KAAK8B,MAAM2C,gBAAgB/E,SAEjD,KAAXkH,GAEF9F,IAAMC,IAAN,GAAAF,OAAarB,EAAb,aAAAqB,OAAgC+F,GAAUlG,GACvCM,KAAK,SAAAC,GAG4B,IAAzBA,EAASC,KAAKC,QACjB0F,EAAKvG,SAAS,CACZ6D,WAAWlD,EAASC,KAAK,GACzBwC,qBAAqBzC,EAASC,KAAK,GAAGM,SAIxCqF,EAAKC,WAELH,MAAM,qBACNE,EAAKvG,SAAS,CACZ6D,WAAW,KACXT,qBAAqB,GACrBD,eAAe,QAItB/B,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,iDAMXmE,GACUvC,EAAYkE,KAAK3B,GAUlCpF,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBC,YAAY,EACZE,aAAc,KAThBxE,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBC,YAAY,EACZE,aAAc,sEAYPwC,GAIb,QAAQ,GACN,KAAKA,EAAO7F,QAAU,EAElBnB,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBE,cAAc,EACdC,aAAc,qEAElB,MACF,KAAKwC,EAAO7F,QAAU,GAElBnB,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBE,cAAc,EACdC,aAAc,kEAElB,MACF,IAA6B,MAAxBwC,EAAOC,OAAO,EAAG,GAElBjH,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBE,cAAc,EACdC,aAAc,gDAElB,MAEF,QAGExE,KAAKM,SAAS,CACZ+D,iBAAiB,EACjBE,cAAc,EACdC,aAAc,yFAuCIzB,8EAGpBmE,EAA2B,EAC3BxG,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2Bb,KAAK8B,MAAM2C,gBAAgB/E,SAG3C,MAAnBqD,EAASzB,uCAGLR,IAAMqG,KAAN,GAAAtG,OAAcrB,EAAd,cAAmC,CACvCyF,SAAUjF,KAAK8B,MAAMwB,iBACrB9B,OAAQxB,KAAK8B,MAAMuB,eAEnB6B,aAAclF,KAAK8B,MAAMyB,YACzB4B,cAAe,EACfC,MAAOpF,KAAK8B,MAAM6B,cAClB0B,GAAIrF,KAAK8B,MAAMyB,YACf+B,OAAQtF,KAAK8B,MAAM2B,eACnB8B,eAAgBvF,KAAK8B,MAAM8B,uBAC3B4B,aAAcxF,KAAK8B,MAAM4B,qBACzB+B,WAAYzF,KAAK8B,MAAM+B,mBACvB6B,SAAU1F,KAAK8B,MAAMiC,iBACrB4B,UAAW3F,KAAK8B,MAAMgC,iBACrBpD,GACFM,KAAK,SAAUC,GAGd8B,EAASzB,OAASL,EAASC,KAC3BgG,EAA2BjG,EAASmG,OACpCpH,KAAKM,SAAS,CAAEoE,SAAQ,MAIzBhD,MAAM,SAAU2F,GACfzF,QAAQC,IAAI,SACZD,QAAQC,IAAIwF,EAAMpG,UAClBjB,KAAKM,SAAS,CAAEoE,SAAQ,mDAOpB5D,IAAMwG,IAAN,GAAAzG,OAAarB,EAAb,cAAAqB,OAAiCb,KAAK8B,MAAM0B,aAAe,CAC/DyB,SAAUjF,KAAK8B,MAAMwB,iBACrB9B,OAAQxB,KAAK8B,MAAMuB,eACnB/B,OAAQtB,KAAK8B,MAAM0B,YACnB0B,aAAclF,KAAK8B,MAAMyB,YACzB4B,cAAe,EACfC,MAAOpF,KAAK8B,MAAM6B,cAClB0B,GAAIrF,KAAK8B,MAAMyB,YACf+B,OAAQtF,KAAK8B,MAAM2B,eACnB8B,eAAgBvF,KAAK8B,MAAM8B,uBAC3B4B,aAAcxF,KAAK8B,MAAM4B,qBACzB+B,WAAYzF,KAAK8B,MAAM+B,mBACvB6B,SAAU1F,KAAK8B,MAAMiC,iBACrB4B,UAAW3F,KAAK8B,MAAMgC,iBACrBpD,GACFM,KAAK,SAAUC,GAGdiG,EAA2BjG,EAASmG,SAIrC1F,MAAM,SAAU2F,GACfzF,QAAQC,IAAI,SACZD,QAAQC,IAAIwF,EAAMpG,mBAKtBjB,KAAKM,SAAS,CAAEoE,SAAQ,IAMS,MAA7BwC,EAGFlH,KAAKJ,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,SAAU1E,SAAWA,EAAU2E,QAAS1H,KAAK8B,MAAM2C,kBAEvFkC,MAAM,kMAWN7F,IAAMqG,KAAN,GAAAtG,OAAcrB,EAAd,aAAkC,CAChCgC,OAAQ,sBAETR,KAAK,SAAUC,GACdW,QAAQC,IAAI,YACZD,QAAQC,IAAIZ,KAEbS,MAAM,SAAU2F,GACfzF,QAAQC,IAAI,SACZD,QAAQC,IAAIwF,EAAMpG,sDAMtB,IAAI0G,EAAa,GAGbA,EAFgC,KAAhC3H,KAAK8B,MAAMwB,iBACqB,KAA9BtD,KAAK8B,MAAMuB,eACH,GAAAxC,OAAOb,KAAK8B,MAAMwB,iBAAlB,KAAAzC,OAAsCb,KAAK8B,MAAMuB,gBAEjD,GAAAxC,OAAOb,KAAK8B,MAAMwB,kBAGI,KAA9BtD,KAAK8B,MAAMuB,eACH,GAAAxC,OAAOb,KAAK8B,MAAMuB,gBAElB,GAIdrD,KAAKJ,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,mBAAoBC,QAAS1H,KAAK8B,MAAM2C,gBAAiBmD,SAAUD,6CAMvG,GAA+B,OAA3B3H,KAAK8B,MAAM0B,YACf,CACE,IAAIqE,EAAgB,GAEpBA,EAAc5C,SAAUjF,KAAK8B,MAAMwB,iBACnCuE,EAAcrG,OAAQxB,KAAK8B,MAAMuB,eACjCwE,EAAcvG,OAAQtB,KAAK8B,MAAM0B,YACjCqE,EAAc3C,aAAclF,KAAK8B,MAAMyB,YACvCsE,EAAc1C,cAAe,EAC7B0C,EAAczC,MAAOpF,KAAK8B,MAAM6B,cAChCkE,EAAcxC,GAAIrF,KAAK8B,MAAMyB,YAC7BsE,EAAcvC,OAAQtF,KAAK8B,MAAM2B,eACjCoE,EAActC,eAAgBvF,KAAK8B,MAAM8B,uBACzCiE,EAAcrC,aAAcxF,KAAK8B,MAAM4B,qBACvCmE,EAAcpC,WAAYzF,KAAK8B,MAAM+B,mBACrCgE,EAAcnC,SAAU1F,KAAK8B,MAAMiC,iBACnC8D,EAAclC,UAAW3F,KAAK8B,MAAMgC,gBAEpC9D,KAAKJ,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,iBAAkBC,QAAS1H,KAAK8B,MAAM2C,gBAAiB1B,SAAU8E,SAErGlB,MAAM,4EAYRjH,EAAQqC,eAAeC,QAAQ,4BAEKE,IAAhClC,KAAKJ,MAAMkI,SAASJ,SAEtB1H,KAAKM,SAAS,CAAEmE,gBAAiBzE,KAAKJ,MAAMkI,SAASJ,eAIfxF,IAApClC,KAAKJ,MAAMkI,SAASC,aACtB/H,KAAKiG,eAAejG,KAAKJ,MAAMkI,SAASC,8CAUrC,IAAAC,EAAAhI,KAIP,OACEqC,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,OAAK,GAEuB,MAA9BlI,KAAK8B,MAAM2C,gBACXpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,UAAQ4F,QAAS,WAAQH,EAAKpI,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,QAA7D,UAGFpF,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CACA+F,OAAQrI,KAAK8B,MAAMsC,iBACnBkE,SAAO,EACPC,KAAK,yBAEHlG,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CACEsG,MAAM,mBACNC,UAEoC,OAAlC7I,KAAKM,SAASmE,gBACZ,YAEA,YAAczE,KAAK8B,MAAM2C,gBAAgBjD,SAI/Ca,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMwG,SAAU/I,KAAK2E,cACnBtC,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,KACED,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CAAY2G,QAAQ,KAAKC,cAAY,GAArC,cAKJ7G,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACI5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,cACH3B,MAAM,MACN6H,OAAO,SACPC,aAAa,MACbhI,MAAOrB,KAAK8B,MAAMyB,YAClB+F,WAAS,EACTC,UAAQ,EACR9G,SAAU,SAAAsC,GAAK,OAAIiD,EAAKhF,aAAa+B,EAAMgB,SAC3CyD,OAAQ,SAAAzE,GAAK,OAAIiD,EAAKlD,WAAWC,EAAMgB,SACvC0D,WAAY,SAAA1E,GAAK,OAAIiD,EAAK0B,eAAe3E,OAG7C1C,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACbpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,mBACH3B,MAAM,WACNF,MAAOrB,KAAK8B,MAAMwB,iBAClBqG,WAAS,EACTP,OAAO,SACPC,aAAa,MACbE,UAAQ,EAER9G,SAAU,SAAAsC,GAAK,OAAIiD,EAAKhF,aAAa+B,EAAMgB,SAC3CyD,OAAQ,SAAAzE,GAAK,OAAIiD,EAAKlD,WAAWC,EAAMgB,SACvC0D,WAAY,SAAA1E,GAAK,OAAIiD,EAAK0B,eAAe3E,OAG/C1C,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACbpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,iBACH3B,MAAM,SACNF,MAAOrB,KAAK8B,MAAMuB,eAClBsG,WAAS,EACTP,OAAO,SACPC,aAAa,MACbE,UAAQ,EAER9G,SAAU,SAAAsC,GAAK,OAAIiD,EAAKhF,aAAa+B,EAAMgB,SAC3CyD,OAAQ,SAAAzE,GAAK,OAAIiD,EAAKlD,WAAWC,EAAMgB,SACvC0D,WAAY,SAAA1E,GAAK,OAAIiD,EAAK0B,eAAe3E,OAG/C1C,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ2G,QAAQ,YACdY,UAAW,mBACX1B,QAAS,WAAQH,EAAKhC,oBAFxB,sBAOA3D,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACA5F,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ2G,QAAQ,YAAYa,MAAM,UAChCD,UAAW,mBACX1B,QAAS,WAAQH,EAAK+B,mBAFxB,8BASR1H,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACbpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,iBACH3B,MAAM,eACNF,MAAOrB,KAAK8B,MAAM2B,eAClB2F,OAAO,SACPC,aAAa,MACbE,UAAQ,EAER9G,SAAU,SAAAsC,GAAK,OAAIiD,EAAKhF,aAAa+B,EAAMgB,SAC3CyD,OAAQ,SAAAzE,GAAK,OAAIiD,EAAKlD,WAAWC,EAAMgB,YAG7C1D,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,EAAGoB,UAAW,kBAC7BxH,EAAAC,EAAAC,cAACyH,EAAD,CACA7H,WAAYnC,KAAK8B,MAAMqC,WACvB5D,eAAgBP,KAAKiE,eAIvB5B,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,KAInBpG,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,yBACH3B,MAAM,kBACNF,MAAOrB,KAAK8B,MAAM8B,uBAClB+F,WAAS,EAETP,OAAO,SACPC,aAAa,MACb5G,SAAU,SAAAsC,GAAK,OAAIiD,EAAKhF,aAAa+B,EAAMgB,SAC3CyD,OAAQ,SAAAzE,GAAK,OAAIiD,EAAKlD,WAAWC,EAAMgB,YAG3C1D,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACjBpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,qBACH3B,MAAM,mBACNF,MAAOrB,KAAK8B,MAAM+B,mBAClBT,KAAK,OAELgG,OAAO,SACP3G,SAAU,SAAAsC,GAAK,OAAIiD,EAAKhF,aAAa+B,EAAMgB,SAC3CyD,OAAQ,SAAAzE,GAAK,OAAIiD,EAAKlD,WAAWC,EAAMgB,SACvCkE,gBAAiB,CACfC,QAAQ,MAIZ7H,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IAKjBpG,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,KAInBpG,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,gBACH3B,MAAM,QACNF,MAAOrB,KAAK8B,MAAM6B,cAElBP,KAAK,QACL+G,KAAK,QACLd,aAAa,MAGbD,OAAO,SACPO,WAAS,EAETlH,SAAU,SAAAsC,GAAK,OAAIiD,EAAKhF,aAAa+B,EAAMgB,SAC3CyD,OAAQ,SAAAzE,GAAK,OAAIiD,EAAKlD,WAAWC,EAAMgB,SACvCkE,gBAAiB,CACf5C,MAAOrH,KAAK8B,MAAMwC,eAKxBjC,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,kBACH3B,MAAM,UACNF,MAAOrB,KAAK8B,MAAMgC,gBAClB6F,WAAS,EACTP,OAAO,SACPC,aAAa,MACbY,gBAAiB,CACf5C,MAAOrH,KAAK8B,MAAMyC,cAEpBgF,UAAQ,EACR9G,SAAU,SAAAsC,GAAK,OAAIiD,EAAKhF,aAAa+B,EAAMgB,SAC3CyD,OAAQ,SAAAzE,GAAK,OAAIiD,EAAKlD,WAAWC,EAAMgB,YAG3C1D,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,mBACH3B,MAAM,WACNF,MAAOrB,KAAK8B,MAAMiC,iBAClB4F,WAAS,EACTP,OAAO,SACPC,aAAa,MAEb5G,SAAU,SAAAsC,GAAK,OAAIiD,EAAKhF,aAAa+B,EAAMgB,SAC3CyD,OAAQ,SAAAzE,GAAK,OAAIiD,EAAKlD,WAAWC,EAAMgB,aAK3C1D,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IAEfzI,KAAK8B,MAAMuC,gBACThC,EAAAC,EAAAC,cAAA,OAAKsH,UAAU,iBACZ7J,KAAK8B,MAAM0C,cAEdnC,EAAAC,EAAAC,cAAA,WAINF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,UAMR5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,EAAG2B,IAAI,MACtB/H,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ2G,QAAQ,YAAYoB,KAAK,QAAQP,MAAM,YAC7C3B,QAAS,WAAQH,EAAKpI,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,QADvD,SAIEpF,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,sBAGJD,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,EAAG2B,IAAI,MACtB/H,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKmC,IAAI,MACP/H,EAAAC,EAAAC,cAAA,OAAKsH,UAAW,WACdxH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ2G,QAAQ,YAAYoB,KAAK,QAAQP,MAAM,UAC7C1G,KAAK,SACLmH,SAAUvK,KAAK8B,MAAMuC,iBAAmBrE,KAAK8B,MAAM4C,SAFrD,sBAKErC,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,cAEDtC,KAAK8B,MAAM4C,SAAWrC,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,CAAkB+H,KAAM,GAAIR,UAAU,qCAh1BlEjH,aCxBnBnD,EAAU,GACVC,EAAQ,GA8HG+K,cA3Hb,SAAAA,EAAY7K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyK,IACjB5K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2K,GAAAtK,KAAAH,KAAMJ,KAQRQ,aAAe,SAACC,GACdR,EAAKS,SAAS,CAAED,mBAChBR,EAAKD,MAAM8K,gBAAgBrK,IAXVR,EAkDnB8K,cAAgB,WACd,IAAKlK,EAAO,GACRC,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BnB,KAGrCoB,IAAMC,IAAN,GAAAF,OAAarB,EAAb,YAAgCkB,GAC7BM,KAAK,SAAAC,GAIJ,GAA8B,IAAzBA,EAASC,KAAKC,OAAc,CAC/B,IAAIC,EACJ,IAAKA,EAAI,EAAGA,EAAIH,EAASC,KAAKC,OAAQC,IAEpCX,EAAKW,GAAK,CACRC,MAAQJ,EAASC,KAAKE,GAAGE,OACzBC,MAAQN,EAASC,KAAKE,GAAGI,QAO7B3B,EAAKS,SAAS,CACZsK,SAASnK,OAQdiB,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,aApFtBpB,EAAKiC,MAAQ,CACXzB,eAAgB,KAChBuK,SAAS,IAJM/K,mFAiBjBH,EAAQqC,eAAeC,QAAQ,uBAC/BhC,KAAK2K,kEAGmB1I,GAIxB,QAA8BC,IAA1BD,EAAWE,YAAsD,OAA1BF,EAAWE,WACtD,CACE,QAAqCD,IAAjCD,EAAWE,WAAWX,OACxB,CACE,IAAIqJ,EAIJA,EAAsB,CACpBxJ,MAAMY,EAAWE,WAAWb,OAC5BC,MAAMU,EAAWE,WAAWX,QAE9BxB,KAAKM,SAAS,CAACD,eAAgBwK,SAEE3I,IAAjCD,EAAWE,WAAWX,QAMtBxB,KAAKM,SAAS,CAACD,eAAgB4B,EAAWE,qDA6CnC2D,GAITA,EAAIA,qCAWD,IAAAU,EAAAxG,KACCK,EAAmBL,KAAK8B,MAAxBzB,eAGR,OAFAZ,EAAUO,KAAK8B,MAAM8I,SAGnBvI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnB,MAAOhB,EACPoC,SAAUzC,KAAKI,aACf0K,UAAW,SAAA/F,GAAK,OAAIyB,EAAKkD,eAAe3E,IACxCtF,QAASA,EACTiD,YAAY,kCArHaC,IAAMC,WCHrCnD,EAAU,GACVC,EAAQ,GA8GGqL,eA3Gb,SAAAA,EAAYnL,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+K,IACjBlL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiL,GAAA5K,KAAAH,KAAMJ,KAQRQ,aAAe,SAACC,GACdR,EAAKS,SAAS,CAAED,mBAChBR,EAAKD,MAAMoL,kBAAkB3K,EAAegB,QAX3BxB,EAkDnBoL,iBAAmB,WACjB,IAAKxK,EAAO,GACRC,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BnB,KAGrCoB,IAAMC,IAAN,GAAAF,OAAarB,EAAb,eAAmCkB,GAChCM,KAAK,SAAAC,GAKJ,GAA8B,IAAzBA,EAASC,KAAKC,OAAc,CAC/B,IAAIC,EACJ,IAAKA,EAAI,EAAGA,EAAIH,EAASC,KAAKC,OAAQC,IAEpCX,EAAKW,GAAK,CACRC,MAAQJ,EAASC,KAAKE,GAAGE,OACzBC,MAAQN,EAASC,KAAKE,GAAGI,QAO7B3B,EAAKS,SAAS,CACZ4K,YAAYzK,OAQjBiB,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,aArFtBpB,EAAKiC,MAAQ,CACXzB,eAAgB,KAChB6K,YAAY,IAJGrL,mFAiBjBH,EAAQqC,eAAeC,QAAQ,uBAC/BhC,KAAKiL,qEAGmBhJ,GAIxB,QAA8BC,IAA1BD,EAAWE,YAAsD,OAA1BF,EAAWE,WACtD,CACE,QAAqCD,IAAjCD,EAAWE,WAAWX,OACxB,CACE,IAAI2J,EAIJA,EAAwB,CACtB9J,MAAMY,EAAWE,WAAWb,OAC5BC,MAAMU,EAAWE,WAAWX,QAE9BxB,KAAKM,SAAS,CAACD,eAAgB8K,SAEEjJ,IAAjCD,EAAWE,WAAWX,QAMtBxB,KAAKM,SAAS,CAACD,eAAgB4B,EAAWE,+CA8CzC,IACC9B,EAAmBL,KAAK8B,MAAxBzB,eAER,OADAZ,EAAUO,KAAK8B,MAAMoJ,YAEnB7I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnB,MAAOhB,EACPoC,SAAUzC,KAAKI,aACfX,QAASA,EACTiD,YAAY,oCArGeC,IAAMC,WCHvClD,GAAQ,GA8LGqL,eA1Lb,SAAAA,EAAYnL,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+K,IACjBlL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiL,GAAA5K,KAAAH,KAAMJ,KAWRwL,2BAA6B,SAACC,GAC5BxL,EAAKS,SAAS,CAAE+K,2BAMjB,IAAIC,EAAkBzL,EAAKiC,MAAMoJ,YAAYK,OAAO,SAAAC,GAAS,OAAIA,EAAUC,eAAiBJ,EAAuBhK,QACnHxB,EAAKS,SAAS,CAAGoL,kBAAmBJ,EACnBK,kBAAmB,MArBlB9L,EA2BnB+L,sBAAwB,SAACD,GACvB9L,EAAKS,SAAS,CAAEqL,sBAChB9L,EAAKD,MAAMiM,qBAAqBF,EAAkBtK,QA7BjCxB,EAqEnBiM,oBAAsB,WACpB,IAAKrL,EAAO,GACRC,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BnB,MAGrCoB,IAAMC,IAAN,GAAAF,OAAarB,EAAb,kBAAqCkB,GAClCM,KAAK,SAAAC,GAKJ,GAA8B,IAAzBA,EAASC,KAAKC,OAAc,CAC/B,IAAIC,EACJ,IAAKA,EAAI,EAAGA,EAAIH,EAASC,KAAKC,OAAQC,IAEpCX,EAAKW,GAAK,CACRC,MAAQJ,EAASC,KAAKE,GAAGE,OACzBC,MAAQN,EAASC,KAAKE,GAAGI,QAO7B3B,EAAKS,SAAS,CACZyL,eAAetL,OAQpBiB,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,aA1GLpB,EA8GnBoL,iBAAmB,WACjB,IAAKxK,EAAO,GACRC,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BnB,MAGrCoB,IAAMC,IAAN,GAAAF,OAAarB,EAAb,eAAmCkB,GAChCM,KAAK,SAAAC,GAKJ,GAA8B,IAAzBA,EAASC,KAAKC,OAAc,CAC/B,IAAIC,EACJ,IAAKA,EAAI,EAAGA,EAAIH,EAASC,KAAKC,OAAQC,IAEpCX,EAAKW,GAAK,CACRC,MAAQJ,EAASC,KAAKE,GAAGE,OACzBC,MAAQN,EAASC,KAAKE,GAAGI,OACzBiK,aAAexK,EAASC,KAAKE,GAAGqK,cAOpC5L,EAAKS,SAAS,CACZ4K,YAAYzK,OAQjBiB,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,aAlJtBpB,EAAKiC,MAAQ,CACX6J,kBAAmB,KACnBN,uBAAuB,KACvBU,eAAe,GACfb,YAAY,GACZQ,kBAAkB,IAPH7L,mFAmCjBH,GAAQqC,eAAeC,QAAQ,uBAC/BhC,KAAK8L,sBACL9L,KAAKiL,qEAGmBhJ,GAIxB,QAA8BC,IAA1BD,EAAWE,YAAsD,OAA1BF,EAAWE,WACtD,CACE,QAAqCD,IAAjCD,EAAWE,WAAWX,OACxB,CACE,IAAIwK,EAIJA,EAA2B,CACzB3K,MAAMY,EAAWE,WAAWb,OAC5BC,MAAMU,EAAWE,WAAWX,QAE9BxB,KAAKM,SAAS,CAAC+K,uBAAwBW,SAEN9J,IAAjCD,EAAWE,WAAWX,QAMtBxB,KAAKM,SAAS,CAAC+K,uBAAwBpJ,EAAWE,+CAyFjD,IAAA8J,EAC8CjM,KAAK8B,MAAlDuJ,EADDY,EACCZ,uBAAuBM,EADxBM,EACwBN,kBAE/B,OACEtJ,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,OAAK,GACT7F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,IACPnG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnB,MAAOgK,EACP5I,SAAUzC,KAAKoL,2BACf3L,QAASO,KAAK8B,MAAMiK,eACpBrJ,YAAY,kCAIlBL,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,IACPnG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnB,MAAOsK,EACPlJ,SAAUzC,KAAK4L,sBACfnM,QAASO,KAAK8B,MAAM4J,kBACpBhJ,YAAY,sCAlLWC,IAAMC,wCCSrCsJ,GAAcC,sBAAW,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJvC,MAAOsC,EAAME,QAAQC,gBAAgBC,KAAM,MAC3CC,gBAAiBD,KAAM,KACvBpD,OAAQ,MAERsD,MAAO,OACPC,UAAW,CACTF,gBAAiBD,KAAM,SARTL,CAWhBS,KA6FWC,eAxEb,SAAAA,IAAc,IAAAhN,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6M,IACZhN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+M,GAAA1M,KAAAH,QAoCF8M,iBAAmB,SAACC,GAGlBlN,EAAKD,MAAMoN,cAAcD,IAtCzBlN,EAAKiC,MAAQ,CACXmL,QAAS,KACTC,OAAQ,IAJErN,mFAkBZG,KAAKM,SAAS,CAAC4M,OAAQlN,KAAKJ,MAAMqN,4DAGVhL,QAGGC,IAAvBD,EAAWgL,SAAgD,OAAvBhL,EAAWgL,cAKhB/K,IAA7BD,EAAWgL,QAAQE,OAAoD,OAA7BlL,EAAWgL,QAAQE,OAC/DnN,KAAKM,SAAS,CAAC4M,OAAQjL,EAAWgL,2CAc/B,IAAAzG,EAAAxG,KAEFoN,EADWpN,KAAK8B,MAAMoL,OAEfG,IAAK,SAACN,EAAO3L,GACrB,OACAiB,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,EAAGC,GAAI,EAAG3C,IAAO1E,GACpBiB,EAAAC,EAAAC,cAAC2J,GAAD,CACEjD,QAAQ,YACRd,QAAS,WAAQ3B,EAAKsG,iBAAiBC,KAEtCtG,EAAOsG,EAAMO,MAAM5G,OAAO,aAIvC,OACErE,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,OAAK,GACP7F,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,KACID,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACGmF,aAhEUxK,aC3BvBsJ,GAAcC,sBAAW,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJvC,MAAOsC,EAAME,QAAQC,gBAAgBC,KAAM,MAC3CC,gBAAiBD,KAAM,KACvBpD,OAAQ,MAERsD,MAAO,OACPC,UAAW,CACTF,gBAAiBD,KAAM,SARTL,CAWhBS,KAiGWC,eA7Eb,SAAAA,IAAc,IAAAhN,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6M,IACZhN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+M,GAAA1M,KAAAH,QAgCF8M,iBAAmB,SAACC,GAKlBlN,EAAKD,MAAM2N,cAAc9G,EAAOsG,EAAMI,OAAOzG,OAAO,gBApCpD7G,EAAKiC,MAAQ,CACX0L,OAAQ,KACRN,OAAQ,IAJErN,mFAkBZG,KAAKM,SAAS,CAACkN,OAAQxN,KAAKJ,MAAMqN,4DAKVhL,QAGGC,IAAvBD,EAAWgL,SAAgD,OAAvBhL,EAAWgL,SAGjDjN,KAAKM,SAAS,CAACkN,OAAQvL,EAAWgL,2CAiB7B,IAAAzG,EAAAxG,KACHyN,EAAczN,KAAK8B,MAAM0L,OACxBJ,EACa,OAAhBK,EACAA,EAAYJ,IAAK,SAACN,EAAO3L,GAAR,OACfiB,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,EAAGC,GAAI,EAAG3C,IAAO1E,GACxBiB,EAAAC,EAAAC,cAACmL,GAAD,CACEzE,QAAQ,YACRd,QAAS,WAAQ3B,EAAKsG,iBAAiBC,KAEtCtG,EAAOsG,EAAMI,OAAOzG,OAAO,kBAKhCrE,EAAAC,EAAAC,cAAA,UAEJ,OACEF,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,OAAK,GACP7F,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,KACID,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACGmF,aArEUxK,yMCwlBd+K,eA1mBb,SAAAA,IAAc,IAAA9N,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2N,IACZ9N,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6N,GAAAxN,KAAAH,QAkCF4N,mBAAqB,WACnB/N,EAAKS,SAAS,CAACuN,cAAc,EACbC,eAAgB,QArCpBjO,EAyCdkO,sBAAwB,WAEtBlO,EAAKS,SAAS,CAACuN,cAAc,EACbC,eAAgB,KAChBE,aAAc,KACbC,aAAc,OAE/BpO,EAAKqO,mBAhDOrO,EAoDdsO,yBAA2B,WACzBtO,EAAKS,SAAS,CAAC8N,oBAAoB,KArDvBvO,EAwDdwO,eAAiB,WACf,IAAIC,EAAezO,EAAKiC,MAAMwM,aAC9BA,EAAY,MAAW,EACvBA,EAAY,IAAU,GAEtBzO,EAAKS,SAAS,CAAEgO,aAAcA,KA7DlBzO,EA0Fd0O,WAAa,SAACC,GAEZ3O,EAAKS,SAAS,CAACmO,SAAUD,EACVX,cAAc,KA7FjBhO,EAiGd6O,WAAa,SAACC,GAKZ,IAAIC,EAAc/O,EAAKiC,MAAM+M,kBAAkBtD,OAAO,SAAAwB,GAAK,OAAItG,EAAOsG,EAAMI,OAAOzG,OAAO,gBAAkBD,EAAOkI,GAAYjI,OAAO,gBAKtI7G,EAAKS,SAAS,CAAE2N,aAAcxH,EAAOkI,GAAYjI,OAAO,cACxCoI,mBAAmB,EACnBC,iBAAkBH,KA7GtB/O,EAkHdmD,aAAe,SAAAC,GAAwC,IAArCC,EAAqCD,EAArCC,GAAI7B,EAAiC4B,EAAjC5B,MAAO8B,EAA0BF,EAA1BE,QAASC,EAAiBH,EAAjBG,KAAM+G,EAAWlH,EAAXkH,KAC1CtK,EAAKS,SAAS,CAAC0N,aAAc,OACpB,KAAL9K,IAAWA,EAAGiH,GAClBtK,EAAKS,SAAS,WACZ,OAAOR,OAAAkE,EAAA,EAAAlE,CAAA,GAAGoD,EAAc,aAATE,EAAsBD,EAAU9B,MApHjDxB,EAAKiC,MAAQ,CACXkN,WAAY,KACZC,cAAe,GACfC,aAAc,KACdC,gBAAiB,KACjBlB,aAAc,KACdmB,cAAe,UACfpB,aAAc,KACde,iBAAkB,KAClBN,SAAS,GACTZ,cAAc,EACdC,eAAgB,KAChBgB,mBAAmB,EACnBjH,cAAc,KACdpD,gBAAgB,KAChB4K,aAAa,GACbR,kBAAkB,GAClBnK,SAAQ,EACR0J,oBAAmB,EACnBkB,sBAAuB,GACvBhB,aAAa,CACXiB,MAAK,EACLC,IAAI,KAIN3P,EAAK4P,aAAe5P,EAAK4P,aAAa7K,KAAlB9E,OAAA+E,EAAA,EAAA/E,CAAAD,IACpBA,EAAK6P,eAAiB7P,EAAK6P,eAAe9K,KAApB9E,OAAA+E,EAAA,EAAA/E,CAAAD,IACtBA,EAAK8P,iBAAmB9P,EAAK8P,iBAAiB/K,KAAtB9E,OAAA+E,EAAA,EAAA/E,CAAAD,IACxBA,EAAKyG,QAAUzG,EAAKyG,QAAQ1B,KAAb9E,OAAA+E,EAAA,EAAA/E,CAAAD,IA/BLA,oHAmEK+P,mFAGX5P,KAAKM,SAAS,CAAE0O,WAAYY,EAAWvO,MAC7B4N,cAAeW,EAAWrO,MAC1ByM,aAAc,cAC9BhO,KAAKsG,4LAGcuJ,mFACb7P,KAAKM,SAAS,CAAC4O,aAAcW,EACnB7B,aAAc,cAC9BhO,KAAKsG,8LAGgBwJ,mFAEf9P,KAAKM,SAAS,CAAC6O,gBAAiBW,EACtB9B,aAAc,cAC9BhO,KAAKsG,yJA0CLtG,KAAKM,SAAS,CAAEuH,cAAe7H,KAAKJ,MAAMmQ,cAC1BtL,gBAAiBzE,KAAKJ,MAAM6E,+JAO5CzE,KAAKM,SAAS,CAAE2N,aAAc,KACdvJ,SAAQ,IAES,YAA7B1E,KAAK8B,MAAMsN,eAAyD,OAA1BpP,KAAK8B,MAAMkN,2CAEjDhP,KAAKgQ,6BAC0B,OAAjChQ,KAAK8B,MAAM+M,mBAEb7O,KAAKM,SAAS,CAAEwO,mBAAkB,EAClBd,cAAc,cAKD,cAA7BhO,KAAK8B,MAAMsN,eAA6D,OAA5BpP,KAAK8B,MAAMoN,6CAEnDlP,KAAKiQ,8BAC0B,OAAjCjQ,KAAK8B,MAAM+M,mBAEb7O,KAAKM,SAAS,CAAEwO,mBAAkB,EAClBd,cAAc,cAKD,iBAA7BhO,KAAK8B,MAAMsN,eAAmE,OAA/BpP,KAAK8B,MAAMqN,kDAEtDnP,KAAKkQ,kCAC0B,OAAjClQ,KAAK8B,MAAM+M,mBAEb7O,KAAKM,SAAS,CAAEwO,mBAAkB,EAClBd,cAAc,YAIlChO,KAAKM,SAAS,CAAEoE,SAAQ,2IAKxB,IAAIyL,EAEJ,OAAOnQ,KAAK8B,MAAMsN,eAChB,IAAK,UACHe,EAAY,EACZ,MACF,IAAK,YACHA,EAAY,EACZ,MACF,IAAK,eACHA,EAAY,EACZ,MACF,QACEA,EAAY,EAGhB,OAAOA,yKAMHC,EAAiB,KACjB1P,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2Bb,KAAK8B,MAAM2C,gBAAgB/E,kBAE5DoB,IAAMC,IAAN,GAAAF,OAAarB,EAAb,gCAAAqB,OAAmDb,KAAK8B,MAAM+F,cAAcvC,OAA5E,aAAAzE,OAA8Fb,KAAK8B,MAAMkN,YAActO,GACxHM,KAAK,SAAAC,GAMAmP,EAH4B,IAAzBnP,EAASC,KAAKC,OAGAF,EAASC,KAOX,OAIpBQ,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,mBAGK,OAAnBmP,IAEE9B,EAAetO,KAAK8B,MAAMwM,cAClB,MAAW,EACvBA,EAAY,IAAU,uBAEtBtO,KAAKM,SAAS,CAAEuO,kBAAmBuB,EACnB9B,aAAcA,KAK9BtO,KAAKM,SAAS,CAAE+O,aAAarP,KAAKqQ,kBAAkBD,GACpCvB,kBAAmBuB,4QASrCE,EAAkB,KAClB5P,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2Bb,KAAK8B,MAAM2C,gBAAgB/E,kBAG5DoB,IAAMC,IAAN,GAAAF,OAAarB,EAAb,mCAAAqB,OAAsDb,KAAK8B,MAAM+F,cAAcvC,OAA/E,eAAAzE,OAAmGb,KAAK8B,MAAMoN,cAAexO,GAC9HM,KAAK,SAAAC,GAMAqP,EAH4B,IAAzBrP,EAASC,KAAKC,OAGCF,EAASC,KAOX,OAIrBQ,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,mBAGM,OAApBqP,GACF3J,MAAM,wBACN3G,KAAKM,SAAS,CAAEuO,kBAAmByB,KAEnCtQ,KAAKM,SAAS,CAAE+O,aAAarP,KAAKqQ,kBAAkBC,GACpCzB,kBAAmByB,iRASrCC,EAAqB,KACrB7P,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2Bb,KAAK8B,MAAM2C,gBAAgB/E,kBAG5DoB,IAAMC,IAAN,GAAAF,OAAarB,EAAb,mCAAAqB,OAAsDb,KAAK8B,MAAM+F,cAAcvC,OAA/E,eAAAzE,OAAmGb,KAAK8B,MAAMqN,iBAAkBzO,GACjIM,KAAK,SAAAC,GAMAsP,EAH4B,IAAzBtP,EAASC,KAAKC,OAGIF,EAASC,KAOX,OAIxBQ,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,mBAGS,OAAvBsP,IAEEjC,EAAetO,KAAK8B,MAAMwM,cAClB,MAAW,EACvBA,EAAY,IAAU,uBAEtBtO,KAAKM,SAAS,CAAEuO,kBAAmB0B,EACnBjC,aAAcA,KAG9BtO,KAAKM,SAAS,CAAE+O,aAAarP,KAAKqQ,kBAAkBE,GACpC1B,kBAAmB0B,gJAKxBC,GACjB,IAAIC,EAAS,GAab,OAXAD,EAAQE,QAAQ,SAAAC,GACQ,IAAlBF,EAAOtP,aAAkCe,IAAlBuO,EAAOtP,OAChCsP,EAAOjJ,KAAK,CAAC2F,MAAMwD,EAAKxD,SAGR,IADHsD,EAAOG,UAAU,SAAAC,GAAW,OAAIA,EAAY1D,QAAUwD,EAAKxD,SAEtEsD,EAAOjJ,KAAK,CAAC2F,MAAMwD,EAAKxD,UAKvBsD,yKAMHK,EAAwB,EACxBC,EAAa,KAGbZ,EAAY,GAEZzP,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2Bb,KAAK8B,MAAM2C,gBAAgB/E,SAGnC,YAA5BM,KAAK8B,MAAMsN,eACZ2B,EAAa/Q,KAAK8B,MAAMkN,WACxBgC,EAAG,GAAAnQ,OAAKrB,EAAL,oBAAAqB,OAA+Bb,KAAK8B,MAAM2M,SAASnN,UAEtDyP,EAAa,KACbC,EAAG,GAAAnQ,OAAKrB,EAAL,oBAAAqB,OAA+Bb,KAAK8B,MAAM2M,SAASnN,kBAShDR,IAAMwG,IAAI0J,EAAK,CACnB1P,OAAQtB,KAAK8B,MAAM2M,SAASnN,OAC5B0D,SAAUhF,KAAK8B,MAAM+F,cAAcvG,OACnC2P,QAASF,EACTzL,OAAQtF,KAAK8B,MAAM+F,cAAcvC,OACjC4L,SAAUlR,KAAK8B,MAAM2C,gBAAgBnD,QACpCZ,GACFM,KAAK,SAAUC,GAGd6P,EAAwB7P,EAASmG,OACjC+I,EAAYlP,EAASC,OAGtBQ,MAAM,SAAU2F,GACfzF,QAAQC,IAAI,SACZD,QAAQC,IAAIwF,EAAMpG,mBAKQ,MAA1B6P,EAGgB,OAAdX,EAEFnQ,KAAKM,SAAS,CAACgP,sBAAuB,qCAC1BlB,oBAAoB,IAGhCpO,KAAKM,SAAS,CAACgP,sBAAuBa,EAC1B/B,oBAAoB,IAMlCpO,KAAKM,SAAS,CAACgP,sBAAuB,2DACxBlB,oBAAoB,uIAS7B,IAAA5H,EAAAxG,KAEP,OACEqC,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,OAAK,GAET7F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAauH,UAAU,oBACrBxH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GAEc,YAA7BzI,KAAK8B,MAAMsN,cACT/M,EAAAC,EAAAC,cAAA,OAAKsH,UAAU,sBACbxH,EAAAC,EAAAC,cAAC4O,EAAD,CAAsBzG,gBAAiB1K,KAAKyP,gBAGf,cAA7BzP,KAAK8B,MAAMsN,cACX/M,EAAAC,EAAAC,cAAA,OAAKsH,UAAU,sBACbxH,EAAAC,EAAAC,cAAC6O,GAAD,CAAwBpG,kBAAmBhL,KAAK0P,kBAGlDrN,EAAAC,EAAAC,cAAA,OAAKsH,UAAU,kCACbxH,EAAAC,EAAAC,cAAC8O,GAAD,CAA2BxF,qBAAsB7L,KAAK2P,qBAI9DtN,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAC+O,GAAAhP,EAAD,CAAauH,UAAU,sBACrBxH,EAAAC,EAAAC,cAACgP,GAAAjP,EAAD,CACA6H,KAAK,gBACL9I,MAAOrB,KAAK8B,MAAMsN,cAClB3M,SAAU,SAAAsC,GAAK,OAAIyB,EAAKxD,aAAa+B,EAAMgB,UAEzC1D,EAAAC,EAAAC,cAACiP,GAAAlP,EAAD,CAAkBuH,UAAU,0BAC1BxI,MAAM,UACNoQ,QAASpP,EAAAC,EAAAC,cAACmP,GAAApP,EAAD,CAAOwH,MAAM,YACtBvI,MAAM,YAGRc,EAAAC,EAAAC,cAACiP,GAAAlP,EAAD,CAAkBuH,UAAU,0BAC1BxI,MAAM,YACNoQ,QAASpP,EAAAC,EAAAC,cAACmP,GAAApP,EAAD,CAAOwH,MAAM,YACtBvI,MAAM,cAERc,EAAAC,EAAAC,cAACiP,GAAAlP,EAAD,CAAkBuH,UAAU,0BAC1BxI,MAAM,eACNoQ,QAASpP,EAAAC,EAAAC,cAACmP,GAAApP,EAAD,CAAOwH,MAAM,YACtBvI,MAAM,oBAOdc,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAA,OAAKsH,UAAU,qBAAf,QAGkC,OAA5B7J,KAAK8B,MAAMmM,aACX5L,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CAAY2G,QAAQ,KAAKC,cAAY,GAClCzC,EAAOzG,KAAK8B,MAAMmM,cAAcvH,OAAO,eAG1CrE,EAAAC,EAAAC,cAAA,YAKRF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAA,OAAKsH,UAAW,WACdxH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ2G,QAAQ,YAAYa,MAAM,UAEhC3B,QAAS,WAAQ3B,EAAKF,WACtBiE,SAAUvK,KAAK8B,MAAM4C,SAHvB,UAOC1E,KAAK8B,MAAM4C,SAAWrC,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,CAAkB+H,KAAM,GAAIR,UAAU,uBAKrExH,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IAEe,OAA5BzI,KAAK8B,MAAMkM,aACThO,KAAK8B,MAAMgN,kBACTzM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoP,GAAD,CACA1E,QAASjN,KAAK8B,MAAMiN,iBACpB/B,cAAehN,KAAKuO,cAItBlM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqP,GAAD,CACA3E,QAASjN,KAAK8B,MAAMuN,aACpB9B,cAAevN,KAAK0O,cAIxBrM,EAAAC,EAAAC,cAAA,gBAShBF,EAAAC,EAAAC,cAACsP,GAAAvP,EAAD,CACAiN,KAAMvP,KAAK8B,MAAM+L,aACjBiE,QAAS9R,KAAK4N,mBACdmE,kBAAgB,qBAChBC,mBAAiB,4BAEf3P,EAAAC,EAAAC,cAAC0P,GAAA3P,EAAD,CAAaY,GAAG,sBAAsB,6BACtCb,EAAAC,EAAAC,cAAC2P,GAAA5P,EAAD,KACED,EAAAC,EAAAC,cAAC4P,GAAA7P,EAAD,CAAmBY,GAAG,4BAEQ,YAA5BlD,KAAK8B,MAAMsN,cACT,gBAAAvO,OAAgB4F,EAAOzG,KAAK8B,MAAMmM,cAAcvH,OAAO,cAAvD,eAAA7F,OAAkF4F,EAAOzG,KAAK8B,MAAM2M,SAASnB,MAAM5G,OAAO,SAA1H,2BAAA7F,OACsBb,KAAK8B,MAAMmN,cADjC,oBAAApO,OACiEb,KAAK8B,MAAM2M,SAAS2D,UADrF,KAIA,eAAAvR,OAAe4F,EAAOzG,KAAK8B,MAAMmM,cAAcvH,OAAO,cAAtD,eAAA7F,OAAiF4F,EAAOzG,KAAK8B,MAAM2M,SAASnB,MAAM5G,OAAO,SAAzH,8BAAA7F,OACwBb,KAAK8B,MAAM2M,SAAS4D,aAD5C,OAKNhQ,EAAAC,EAAAC,cAAC+P,GAAAhQ,EAAD,KACED,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ6F,QAASnI,KAAK4N,mBAAoB9D,MAAM,WAAhD,MAGAzH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ6F,QAASnI,KAAK+N,sBAAuBjE,MAAM,UAAUR,WAAS,GAAtE,QAMJjH,EAAAC,EAAAC,cAACsP,GAAAvP,EAAD,CACAiN,KAAMvP,KAAK8B,MAAMsM,mBACjB0D,QAAS9R,KAAKmO,yBACd4D,kBAAgB,qBAChBC,mBAAiB,4BAEf3P,EAAAC,EAAAC,cAAC0P,GAAA3P,EAAD,CAAaY,GAAG,sBACdb,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACdzI,KAAK8B,MAAMwN,sBACZjN,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKmC,IAAI,MACP/H,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ6F,QAASnI,KAAKmO,yBAA0BrE,MAAM,WAAtD,UAORzH,EAAAC,EAAAC,cAACsP,GAAAvP,EAAD,CACAiN,KAAMvP,KAAK8B,MAAMwM,aAAaiB,KAC9BuC,QAAS9R,KAAKqO,eACd0D,kBAAgB,qBAChBC,mBAAiB,4BAEf3P,EAAAC,EAAAC,cAAC0P,GAAA3P,EAAD,CAAaY,GAAG,sBACdb,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACdzI,KAAK8B,MAAMwM,aAAakB,IACzBnN,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKmC,IAAI,MACP/H,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ6F,QAASnI,KAAKqO,eAAgBvE,MAAM,WAA5C,kBA/lBWlH,aCnBrB2P,eAGJ,SAAAA,IAAc,IAAA1S,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuS,IACZ1S,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyS,GAAApS,KAAAH,QAEK8B,MAAQ,CACb+F,cAAc,KACdpD,gBAAgB,MALJ5E,wFAYyBqC,IAAjClC,KAAKJ,MAAMkI,SAAS/E,UAAkE,OAAxC/C,KAAKJ,MAAMkI,SAAS/E,SAASzB,aAA2DY,IAAxClC,KAAKJ,MAAMkI,SAAS/E,SAASzB,OACzF,OAAhCtB,KAAKJ,MAAMkI,SAASJ,cAAoDxF,IAAhClC,KAAKJ,MAAMkI,SAASJ,SAG9D1H,KAAKM,SAAS,CAAEmE,gBAAiBzE,KAAKJ,MAAMkI,SAASJ,UAIzD1H,KAAKM,SAAS,CAAEuH,cAAe7H,KAAKJ,MAAMkI,SAAS/E,SACnC0B,gBAAiBzE,KAAKJ,MAAMkI,SAASJ,2CAM9C,IAAAlB,EAAAxG,KAOP,OACEqC,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,OAAK,GACuB,MAA9BlI,KAAK8B,MAAM2C,gBACXpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,UAAQ4F,QAAS,WAAQ3B,EAAK5G,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,QAA7D,UAG0B,MAA5BzH,KAAK8B,MAAM+F,cACVxF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,UAAQ4F,QAAS,WAAQ3B,EAAK5G,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,YAAaC,QAASlB,EAAK1E,MAAM2C,oBAA9F,WAGFpC,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CACEsG,MAAQ,gBAAkB5I,KAAK8B,MAAM+F,cAAc3C,aAAe,MAAQlF,KAAK8B,MAAM+F,cAAc5C,SAAW,KAAOjF,KAAK8B,MAAM+F,cAAcrG,OAC9IqH,UAAW,WAAa7I,KAAK8B,MAAM+F,cAAcvC,OAAS,MAAQtF,KAAK8B,MAAM+F,cAAcrC,eAE7FnD,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,KACAD,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CAAY2G,QAAQ,KAAKC,cAAY,GAArC,WAIF7G,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,EAAGC,GAAI,EAAG2B,IAAI,MACrB/H,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,CAAMwH,MAAM,QAAQ0I,MAAO,CAAEC,SAAU,KAAvC,gBAKJpQ,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACmQ,GAAD,CACA3C,cAAe/P,KAAK8B,MAAM+F,cAC1BpD,gBAAiBzE,KAAK8B,MAAM2C,uBAOtCpC,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ2G,QAAQ,YAAYa,MAAM,UAClC3B,QAAS,WAAQ3B,EAAK5G,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,YAAaC,QAASlB,EAAK1E,MAAM2C,oBADtF,oBAnFQ7B,aAgGL+P,eAAWJ,ICpGXK,oLARX,OACEvQ,EAAAC,EAAAC,cAAA,OAAKsH,UAAU,QACbxH,EAAAC,EAAAC,cAAA,4CAJgBK,uDCoClBsJ,GAAcC,sBAAW,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJvC,MAAO,QACP+I,WAAY,mDAEZC,UAAW,wCACX1J,OAAQ,MAERsD,MAAO,QACPqG,OAAQ,OACRpG,UAAW,CACTF,gBAAiBuG,KAAK,SAXR7G,CAchB8G,MA4OWC,eAxOb,SAAAA,IAAc,IAAArT,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkT,IACZrT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoT,GAAA/S,KAAAH,QAgBFgD,aAAe,SAAAC,GAAmB,IAAhBC,EAAgBD,EAAhBC,GAAI7B,EAAY4B,EAAZ5B,MAChB8R,EAAe,GAEnBtT,EAAKS,SAAS,CAAE8S,cAAc,EACdC,eAAe,IAG/BF,EAAY,QAAatT,EAAKiC,MAAM4F,QAAQ4L,QAC5CH,EAAY,SAActT,EAAKiC,MAAM4F,QAAQ6L,SAC7CJ,EAAY,MAAWtT,EAAKiC,MAAM4F,QAAQhI,MAE1CyT,EAAajQ,GAAK7B,EAElBxB,EAAKS,SAAS,CACZoH,QAASyL,KA/BCtT,EAgEdqT,MAAQ,WAG6B,KAA/BrT,EAAKiC,MAAM4F,QAAQ4L,SAAkD,KAAhCzT,EAAKiC,MAAM4F,QAAQ6L,SAE1D1T,EAAK2T,gBAG8B,KAA/B3T,EAAKiC,MAAM4F,QAAQ4L,SACrBzT,EAAKS,SAAS,CAAC8S,cAAc,IAEK,KAAhCvT,EAAKiC,MAAM4F,QAAQ6L,UACrB1T,EAAKS,SAAS,CAAC+S,eAAe,EAChBI,iBAAkB,6BA3EpC5T,EAAKiC,MAAQ,CACX4F,QAAS,CAAG4L,QAAS,GACTC,SAAU,GACV7T,MAAO,GACP8B,OAAO,IAEnB4R,cAAa,EACbC,eAAc,EACdI,iBAAiB,GACjBC,eAAc,GAGhB7T,EAAK8E,aAAe9E,EAAK8E,aAAaC,KAAlB9E,OAAA+E,EAAA,EAAA/E,CAAAD,IAdRA,mFA2CZkC,eAAe4R,WAAW,yEAIF1R,yCAIb8C,GAGX/E,KAAKM,SAAS,CAACoT,eAAe,IAG9B1T,KAAKkT,QAELnO,EAAMc,0LA2BFsN,EAAe,GACfS,EAAqB,EACrBC,EAAoB,YAGhB/S,IAAMqG,KAAN,GAAAtG,OAAcrB,EAAd,mBAAwC,CAC1CsU,cAAe9T,KAAK8B,MAAM4F,QAAQ4L,QAClCC,SAASvT,KAAK8B,MAAM4F,QAAQ6L,WAE7BvS,KAAK,SAAUC,GAId2S,EAAqB3S,EAASmG,OAC9ByM,EAAoB5S,EAASC,KAAKxB,MAClCqC,eAAegS,QAAQ,sBAAuBF,KAE/CnS,MAAM,SAAU2F,GACfzF,QAAQC,IAAI,SACZD,QAAQC,IAAIwF,EAAMpG,0BAEhBP,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BgT,cAKjC/S,IAAMC,IAAN,GAAAF,OAAarB,EAAb,qBAAAqB,OAAwCb,KAAK8B,MAAM4F,QAAQ4L,SAAW5S,GAC3EM,KAAK,SAAAC,GAIJkS,EAAY,QAAa3M,EAAK1E,MAAM4F,QAAQ4L,QAC5CH,EAAY,SAAc3M,EAAK1E,MAAM4F,QAAQ6L,SAC7CJ,EAAY,MAAWU,EACvBV,EAAY,OAAYlS,EAASC,KAAK,GAAG8S,eACzCb,EAAY,OAAYlS,EAASC,KAAK,GAAGI,SAE1CI,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,mBAGO,MAAvB2S,EAGF5T,KAAKJ,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,YAAaC,QAASyL,IAE1DnT,KAAKM,SAAS,CAAE+S,eAAe,EACfI,iBAAkB,gCAClBC,eAAc,uIAS3B,IAAA7M,EAAA7G,KAEP,OACEqC,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,OAAK,GACT7F,EAAAC,EAAAC,cAAA,QAAMwG,SAAU/I,KAAK2E,cACnBtC,EAAAC,EAAAC,cAAA,OAAKsH,UAAU,cACbxH,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKgM,OAAO,MACV5R,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAI0L,GAAI,EAAGzL,GAAI,GACtBpG,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAauH,UAAU,aACnBxH,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKgM,OAAO,KAAKpK,UAAU,iBACzBxH,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CAAY2G,QAAQ,KAAKC,cAAY,GAArC,UAIF7G,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKgM,OAAO,KAAKpK,UAAU,cACzBxH,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,CAAOkQ,MAAO,CAAEC,SAAU,KAA1B,mBAIFpQ,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKgM,OAAO,KAAKpK,UAAU,gBACzBxH,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAI0L,GAAI,IACf7R,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,UACH3B,MAAM,UACNF,MAAOrB,KAAK8B,MAAM4F,QAAQ4L,QAC1B7Q,SAAU,SAAAsC,GAAK,OAAI8B,EAAK7D,aAAa+B,EAAMgB,SAC3CqD,OAAO,SACPO,WAAS,EACTJ,UAAQ,EACRD,WAAS,EACTD,aAAa,QAGbrJ,KAAK8B,MAAMsR,aACX/Q,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,YAINF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKgM,OAAO,KAAKpK,UAAU,iBACzBxH,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAI0L,GAAI,IACf7R,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,WACH3B,MAAM,WACN6B,KAAK,WACLiG,aAAa,mBACbhI,MAAOrB,KAAK8B,MAAM4F,QAAQ6L,SAC1B9Q,SAAU,SAAAsC,GAAK,OAAI8B,EAAK7D,aAAa+B,EAAMgB,SAC3CqD,OAAO,SACPO,WAAS,EACTJ,UAAQ,IAGRvJ,KAAK8B,MAAMuR,cACXhR,EAAAC,EAAAC,cAAA,SAAIvC,KAAK8B,MAAM2R,kBACfpR,EAAAC,EAAAC,cAAA,YAINF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKgM,OAAO,MACV5R,EAAAC,EAAAC,cAAA,OAAKsH,UAAU,cACX7J,KAAK8B,MAAM4R,cACXrR,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,MAEAD,EAAAC,EAAAC,cAAC4R,GAAD,CACAlL,QAAQ,WACR7F,KAAK,UAFL,yBApNRR,kCChChBlD,GAAQ,GAiPG0U,eA3Ob,SAAAA,IAAc,IAAAvU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoU,IACZvU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsU,GAAAjU,KAAAH,QAwFFgD,aAAe,SAAAC,GAAkC,IAA/BC,EAA+BD,EAA/BC,GAAI7B,EAA2B4B,EAA3B5B,MAAO8B,EAAoBF,EAApBE,QAASC,EAAWH,EAAXG,KAGpCvD,EAAKS,SAAS,WACZ,OAAOR,OAAAkE,EAAA,EAAAlE,CAAA,GAAGoD,EAAc,aAATE,EAAsBD,EAAU9B,MA3FjDxB,EAAKiC,MAAQ,CACbuS,kBAAmB,GACnB5P,gBAAgB,KAChB6P,aAAa,GACb5P,SAAQ,EACR6P,mBAAkB,GAGlB1U,EAAK8E,aAAe9E,EAAK8E,aAAaC,KAAlB9E,OAAA+E,EAAA,EAAA/E,CAAAD,IAVRA,yEAeZG,KAAKM,SAAS,CAAEoE,SAAQ,IAExB1E,KAAKiG,eAAejG,KAAK8B,MAAMwS,sDAGjB1M,GACd5H,KAAKM,SAAS,CAAEoE,SAAQ,IAExB1E,KAAKiG,eAAe2B,wCAGT7C,GAEX/E,KAAKiG,eAAejG,KAAK8B,MAAMwS,cAC/BvP,EAAMc,wDAKMrE,GAAQ,IAAAgF,EAAAxG,KAElBU,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BnB,MAElC8U,EAAY,GAEXhT,EAAOL,QAAU,EAGnBL,IAAMC,IAAN,GAAAF,OAAarB,EAAb,sBAAAqB,OAAyCW,GAAUd,GAChDM,KAAK,SAAAC,GAGJ,GAA8B,IAAzBA,EAASC,KAAKC,OAAc,CAC/B,IAAIC,EACJ,IAAKA,EAAI,EAAGA,EAAIH,EAASC,KAAKC,OAAQC,IAElCoT,EAAUpT,GAAK,CACbE,OAAsC,OAA5BL,EAASC,KAAKE,GAAGE,OAAiBL,EAASC,KAAKE,GAAGE,OAAO,GACpE+D,GAA8B,OAAxBpE,EAASC,KAAKE,GAAGiE,GAAapE,EAASC,KAAKE,GAAGiE,GAAG,GACxD7D,OAAsC,OAA5BP,EAASC,KAAKE,GAAGI,OAAiBP,EAASC,KAAKE,GAAGI,OAAO,GACpEyD,SAA0C,OAA9BhE,EAASC,KAAKE,GAAG6D,SAAmBhE,EAASC,KAAKE,GAAG6D,SAAS,GAC1EK,OAA4C,OAAlCrE,EAASC,KAAKE,GAAGoE,aAAuBvE,EAASC,KAAKE,GAAGoE,aAAa,GAChFC,WAA8C,OAAhCxE,EAASC,KAAKE,GAAGqE,WAAqBgB,EAAOxF,EAASC,KAAKE,GAAGqE,YAAYiB,OAAO,cAAc,cAM/GF,EAAKlG,SAAS,CACZ+T,kBAAkBG,EAClBD,mBAAkB,EAClB7P,SAAQ,OAOjBhD,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,aAGpB0F,MAAM,uCACN3G,KAAKM,SAAS,CACZoE,SAAQ,kDAeQ+P,GAElBzU,KAAKJ,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,YAAaC,QAAS1H,KAAK8B,MAAM2C,gBAAiBsD,YAAa0M,EAAUpP,4CAGlGS,GAIE,UAAXA,EAAIA,KACN9F,KAAKsG,sDAUP5G,GAAQqC,eAAeC,QAAQ,4BAEKE,IAAhClC,KAAKJ,MAAMkI,SAASJ,SACtB1H,KAAKM,SAAS,CAAEmE,gBAAiBzE,KAAKJ,MAAMkI,SAASJ,QACrC4M,aAAetU,KAAKJ,MAAMkI,SAASF,gBAGhB1F,IAAjClC,KAAKJ,MAAMkI,SAASF,UAA2D,OAAjC5H,KAAKJ,MAAMkI,SAASF,UAAsD,KAAjC5H,KAAKJ,MAAMkI,SAASF,UAG7G5H,KAAK0U,gBAAgB1U,KAAKJ,MAAMkI,SAASF,2CAMtC,IAAAf,EAAA7G,KAEP,OACEqC,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,OAAK,GAEP7F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CACEsG,MAAM,+BAGRvG,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMwG,SAAU/I,KAAK2E,cACnBtC,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,KACED,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACI5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACbpG,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEY,GAAG,eACH3B,MAAM,0BACN6H,OAAO,SACPC,aAAa,MACbhI,MAAOrB,KAAK8B,MAAMwS,aAClBhL,WAAS,EACTC,UAAQ,EACRI,WAAS,EACTlH,SAAU,SAAAsC,GAAK,OAAI8B,EAAK7D,aAAa+B,EAAMgB,SAC3C0D,WAAY,SAAA1E,GAAK,OAAI8B,EAAK6C,eAAe3E,OAI/C1C,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAAA,OAAKsH,UAAW,WACdxH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ2G,QAAQ,YAAYa,MAAM,UAClCO,KAAK,QACLE,SAAUvK,KAAK8B,MAAM4C,QACrByD,QAAS,WAAQtB,EAAKP,YAHtB,UAOCtG,KAAK8B,MAAM4C,SAAWrC,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,CAAkB+H,KAAM,GAAIR,UAAU,sBAKrExH,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACIjI,KAAK8B,MAAMyS,kBACXlS,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,IACPnG,EAAAC,EAAAC,cAAA,OAAKiQ,MAAO,CAAEmC,SAAU,SACtBtS,EAAAC,EAAAC,cAACqS,GAAAtS,EAAD,CACEsG,MAAM,YACNiM,QAAS,CACP,CAAEjM,MAAO,OAAQkM,MAAO,MACxB,CAAElM,MAAO,SAAUkM,MAAO,UAC1B,CAAElM,MAAO,WAAYkM,MAAO,YAC5B,CAAElM,MAAO,SAAUkM,MAAO,WAK5B5T,KAAMlB,KAAK8B,MAAMuS,kBACjBU,QAAS,CACP,CACEC,KAAM,OACNC,QAAS,uBACT9M,QAAS,SAACpD,EAAOmQ,GAAR,OAAoBrO,EAAKsO,qBAAqBD,UAOjE7S,EAAAC,EAAAC,cAAA,UAEFF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ2G,QAAQ,YAAYa,MAAM,UAClC3B,QAAS,WAAQtB,EAAKjH,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,YAAaC,QAASb,EAAK/E,MAAM2C,oBADtF,6BAtNA7B,aCH1BlD,GAAQ,GAsVG0V,eAjVb,SAAAA,IAAc,IAAAvV,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoV,IACZvV,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsV,GAAAjV,KAAAH,QA4IFgD,aAAe,SAAAC,GAAkC,IAA/BC,EAA+BD,EAA/BC,GAAI7B,EAA2B4B,EAA3B5B,MAAO8B,EAAoBF,EAApBE,QAASC,EAAWH,EAAXG,KAGpCvD,EAAKS,SAAS,WACZ,OAAOR,OAAAkE,EAAA,EAAAlE,CAAA,GAAGoD,EAAc,aAATE,EAAsBD,EAAU9B,MAjJrCxB,EA2JdsO,yBAA2B,WACzBtO,EAAKS,SAAS,CAAC8N,oBAAoB,KA5JvBvO,EAyKdwV,YAAc,WACZ1O,MAAM,mBACN9G,EAAKS,SAAS,CAAEgV,cAAa,KA3KjBzV,EA+Kd0V,eAAiB,WAEf1V,EAAKS,SAAS,CAAEgV,cAAa,IAE7BzV,EAAK2V,iBAnLO3V,EAyLd4V,YAAc,SAAChH,GAEb,IAAIiH,EAAc7V,EAAKiC,MAAMoL,OAAO3B,OAAO,SAAAwB,GAAK,OAAIA,EAAMzL,SAAWmN,IAKrE5O,EAAKS,SAAS,CAAE4M,OAAQwI,KA9LxB7V,EAAKiC,MAAQ,CACbkD,SAAU,KACVP,gBAAgB,KAChByI,OAAO,GACPyI,YAAY,CACVxI,MAAM,KACNG,KAAK,MAEPgI,cAAa,EACblH,oBAAmB,EACnBkB,sBAAuB,GACvB5K,SAAQ,GAbI7E,mFAyBKyB,GAAQ,IAAAkF,EAAAxG,KAE3B,GAAsB,OAAlBA,KAAKgF,SAAmB,CAC1B,IAAI4Q,EAAS,GACTlV,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BnB,MAKrCoB,IAAMC,IAAN,GAAAF,OAAarB,EAAb,oCAAAqB,OAAuDS,GAAUZ,GAC9DM,KAAK,SAAAC,GAGF,GAA8B,IAAzBA,EAASC,KAAKC,OAAc,CAC/B,IAAIC,EACJ,IAAKA,EAAI,EAAGA,EAAIH,EAASC,KAAKC,OAAQC,IAElCwU,EAAOxU,GAAK,CACVE,OAAsC,OAA5BL,EAASC,KAAKE,GAAGE,OAAiBL,EAASC,KAAKE,GAAGE,OAAO,GACpE6L,MAAoC,OAA3BlM,EAASC,KAAKE,GAAG+L,MAAgB1G,EAAOxF,EAASC,KAAKE,GAAG+L,OAAOzG,OAAO,cAAc,aAC9F4G,KAAkC,OAA1BrM,EAASC,KAAKE,GAAGkM,KAAe7G,EAAOxF,EAASC,KAAKE,GAAGkM,MAAM5G,OAAO,SAAS,QACtF8E,UAA2C,IAA/BvK,EAASC,KAAKE,GAAGyU,UAAiB5U,EAASC,KAAKE,GAAGgR,UAAUnR,EAASC,KAAKE,GAAGiR,aAC1FpB,QAA2C,OAAhChQ,EAASC,KAAKE,GAAG0U,WAAqB7U,EAASC,KAAKE,GAAG0U,WAAW,GAC7EC,SAA0C,OAA9B9U,EAASC,KAAKE,GAAG2U,SAAmB9U,EAASC,KAAKE,GAAG2U,SAAS,GAC1EC,UAA4C,OAA/B/U,EAASC,KAAKE,GAAG4U,WAAoB/U,EAASC,KAAKE,GAAG4U,UACnE1Q,OAAyC,OAA/BrE,EAASC,KAAKE,GAAG6U,UAAoBhV,EAASC,KAAKE,GAAG6U,UAAU,IAMhFzP,EAAKlG,SAAS,CACZ4M,OAAO0I,EACPlR,SAAQ,OAMfhD,MAAM,SAAAC,GAEHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAEV,UACduF,EAAKlG,SAAS,CACZoE,SAAQ,MAKlB1E,KAAKM,SAAS,CACVoE,SAAQ,uKAORwR,EAAsB,EAGtB/F,EAAY,GAEZzP,EAAS,CACXC,QAAS,CAACC,cAAA,UAAAC,OAA2BnB,MAGvCsR,EAAG,GAAAnQ,OAAKrB,EAAL,oBAAAqB,OAA+Bb,KAAK8B,MAAM6T,YAAYrU,iBAOjDR,IAAMwG,IAAI0J,EAAK,GAElBtQ,GACFM,KAAK,SAAUC,GAGdiV,EAAsBjV,EAASmG,OAC/B+I,EAAYlP,EAASC,OAGtBQ,MAAM,SAAU2F,GACfzF,QAAQC,IAAI,SACZD,QAAQC,IAAIwF,EAAMpG,mBAKM,MAAxBiV,EAGgB,OAAd/F,GAEFnQ,KAAKM,SAAS,CAACgP,sBAAuB,oCAC1BlB,oBAAoB,IAEhCpO,KAAKyV,YAAYzV,KAAK8B,MAAM6T,YAAYrU,SAGxCtB,KAAKM,SAAS,CAACgP,sBAAuBa,EAC1B/B,oBAAoB,IAMlCpO,KAAKM,SAAS,CAACgP,sBAAuB,0DACxBlB,oBAAoB,uIAgB5BqG,GACR9N,MAAM,iBAAmB8N,kCAQnBA,GAINzU,KAAKM,SAAS,CAAEqV,YAAalB,EACba,cAAa,gDAqC7B5V,GAAQqC,eAAeC,QAAQ,4BACKE,IAAhClC,KAAKJ,MAAMkI,SAASJ,SAEtB1H,KAAKM,SAAS,CAAEmE,gBAAiBzE,KAAKJ,MAAMkI,SAASJ,eAGlBxF,IAAjClC,KAAKJ,MAAMkI,SAAS/E,WAEtB/C,KAAKM,SAAS,CAAE0E,SAAUhF,KAAKJ,MAAMkI,SAAS/E,WAG9C/C,KAAKmW,oBAAoBnW,KAAKJ,MAAMkI,SAAS/E,SAASzB,0CAQnD,IAAAuF,EAAA7G,KAEP,OACEqC,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,OAAK,GACP7F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,KACED,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CACEsG,MAAM,qBACNC,UAE4B,OAAxB7I,KAAK8B,MAAMkD,SACT,WADF,GAAAnE,OAGKb,KAAK8B,MAAMkD,SAASC,SAHzB,MAAApE,OAGsCb,KAAK8B,MAAMkD,SAASxD,UAGhEa,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,KACItC,KAAK8B,MAAM4C,QACXrC,EAAAC,EAAAC,cAAA,OAAKsH,UAAU,wBACbxH,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,CAAkB+H,KAAM,GAAIR,UAAU,oBAGxCxH,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,IACPnG,EAAAC,EAAAC,cAAA,OAAKiQ,MAAO,CAAEmC,SAAU,SACtBtS,EAAAC,EAAAC,cAACqS,GAAAtS,EAAD,CACEsG,MAAM,SACNiM,QAAS,CACP,CAAEjM,MAAO,QAASkM,MAAO,SACzB,CAAElM,MAAO,OAAQkM,MAAO,QACxB,CAAElM,MAAO,SAAUkM,MAAO,UAC1B,CAAElM,MAAO,mBAAoBkM,MAAO,aACpC,CAAElM,MAAO,UAAWkM,MAAO,YAI7B5T,KAAMlB,KAAK8B,MAAMoL,OACjB6H,QAAS,CACP,SAAAG,GAAO,MAAK,CACVF,KAAM,SACNC,QAAS,iBACT9M,QAAS,SAACpD,EAAOmQ,GAAR,OAAmBrO,EAAKuP,OAAOlB,IACxC3K,UAAW2K,EAAQc,iBAM7B3T,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,GACfpG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ2G,QAAQ,YAAYa,MAAM,UAClC3B,QAAS,WAAQtB,EAAKjH,MAAM2H,QAAQC,KAAK,CAAEC,SAAU,YAAaC,QAASb,EAAK/E,MAAM2C,gBAAiBsD,YAAalB,EAAK/E,MAAMkD,SAASE,iBADxI,gBAYd7C,EAAAC,EAAAC,cAACsP,GAAAvP,EAAD,CACAiN,KAAMvP,KAAK8B,MAAMwT,aACjBxD,QAAS9R,KAAKqV,YACdtD,kBAAgB,qBAChBC,mBAAiB,4BAEf3P,EAAAC,EAAAC,cAAC0P,GAAA3P,EAAD,CAAaY,GAAG,sBAAsB,4BACtCb,EAAAC,EAAAC,cAAC2P,GAAA5P,EAAD,KACED,EAAAC,EAAAC,cAAC4P,GAAA7P,EAAD,CAAmBY,GAAG,4BAAtB,eAAArC,OAEiBb,KAAK8B,MAAM6T,YAAYxI,MAFxC,eAAAtM,OAE2Db,KAAK8B,MAAM6T,YAAYrI,KAFlF,SAAAzM,OAE8Fb,KAAK8B,MAAM6T,YAAYnK,UAFrH,OAMFnJ,EAAAC,EAAAC,cAAC+P,GAAAhQ,EAAD,KACED,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ6F,QAASnI,KAAKqV,YAAavL,MAAM,WAAzC,MAGAzH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ6F,QAASnI,KAAKuV,eAAgBzL,MAAM,UAAUR,WAAS,GAA/D,QAMJjH,EAAAC,EAAAC,cAACsP,GAAAvP,EAAD,CACAiN,KAAMvP,KAAK8B,MAAMsM,mBACjB0D,QAAS9R,KAAKmO,yBACd4D,kBAAgB,qBAChBC,mBAAiB,4BAEf3P,EAAAC,EAAAC,cAAC0P,GAAA3P,EAAD,CAAaY,GAAG,sBACdb,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACdzI,KAAK8B,MAAMwN,sBACZjN,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKmC,IAAI,MACP/H,EAAAC,EAAAC,cAAC0F,EAAA,IAAD,CAAKO,GAAI,GAAIC,GAAI,IACfpG,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAQ6F,QAASnI,KAAKmO,yBAA0BrE,MAAM,WAAtD,kBArUYlH,aCsBbyT,oLAhCX,OACEhU,EAAAC,EAAAC,cAAC+T,EAAA,EAAD,KACEjU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgU,EAAA,EAAD,KACElU,EAAAC,EAAAC,cAACgU,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,UAAWxD,KACb7Q,EAAAC,EAAAC,cAACgU,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,YACLC,UAAW3T,IACbV,EAAAC,EAAAC,cAACgU,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,SACLC,UAAWnE,KACblQ,EAAAC,EAAAC,cAACgU,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,mBACLC,UAAWtC,KACb/R,EAAAC,EAAAC,cAACgU,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,iBACLC,UAAWtB,KACb/S,EAAAC,EAAAC,cAACgU,EAAA,EAAD,CAAOG,UAAW9D,eA1BZhQ,aCDE+T,QACW,cAA7BC,OAAO9O,SAAS+O,UAEe,UAA7BD,OAAO9O,SAAS+O,UAEhBD,OAAO9O,SAAS+O,SAASC,MACvB,2DCZNC,IAASjQ,OAAOzE,EAAAC,EAAAC,cAACyU,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrW,KAAK,SAAAsW,GACjCA,EAAaC","file":"static/js/main.cf3f3345.chunk.js","sourcesContent":["//var urlRest = 'http://ServerGya:8080/api/';\r\nvar urlRest = 'http://webapiturnos.vitus.com.ar/api/';\r\n\r\nexport {\r\n    urlRest,\r\n}","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nimport axios from 'axios';\r\nimport { urlRest } from '../datos/Config';\r\n\r\n\r\n\r\nvar options = [];\r\nvar token = '';\r\n\r\n\r\nclass autocompletarMutual extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOption: null,\r\n      mutuales:[],\r\n      };\r\n\r\n  }\r\n\r\n  handleChange = (selectedOption) => {\r\n    //console.log('handleChange');\r\n    this.setState({ selectedOption });\r\n    this.props.onSelectMutual(selectedOption); \r\n    //console.log(`Option selected:`, selectedOption);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    //console.log('El componente Mutuales está disponible en el DOM');\r\n    token = sessionStorage.getItem(\"AppOfertaTurnoToken\");\r\n    this.TraerMutuales();\r\n  }\r\n\r\n  componentWillReceiveProps(next_props) {\r\n    //console.log('componentWillReceiveProps');\r\n\r\n\r\n    if (next_props.MutualBusq !== undefined && next_props.MutualBusq !== null) \r\n    {\r\n      if (next_props.MutualBusq.nombre !== undefined ) \r\n        {\r\n          var mutualSeleccionada= {};\r\n          //console.log('next_props.MutualBusq.nombre')\r\n          //console.log(next_props.MutualBusq);\r\n          \r\n          mutualSeleccionada = {\r\n            value:next_props.MutualBusq.codigo,\r\n            label:next_props.MutualBusq.nombre,\r\n          };\r\n          this.setState({selectedOption: mutualSeleccionada,});\r\n        }\r\n      if (next_props.MutualBusq.nombre === undefined ) \r\n        {\r\n          \r\n          //console.log('next_props.MutualBusq.nombre undefined')\r\n          //console.log(next_props.MutualBusq);\r\n\r\n          this.setState({selectedOption: next_props.MutualBusq,});\r\n        }\r\n    }\r\n  }\r\n  \r\n  TraerMutuales = () => {\r\n    var  cart = [];\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${token}`}\r\n    };\r\n    //console.log(`http://ServerGya:8080/api/mutuales`);\r\n      axios.get(`${urlRest}mutuales`, config)\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n          \r\n          //console.log(response.data.length)\r\n          if ( response.data.length !== 0 ){\r\n            var i;\r\n            for (i = 0; i < response.data.length; i++) { \r\n              //response.data[i].nombre;\r\n              cart[i] = {\r\n                value : response.data[i].codigo,\r\n                label : response.data[i].nombre\r\n              };\r\n           \r\n              //this.options[value] = response.data[i].codigo;\r\n              //this.options[label] = response.data[i].nombre;\r\n            }\r\n            \r\n            this.setState({\r\n              mutuales:cart,\r\n              \r\n            });\r\n\r\n            \r\n          }\r\n            }\r\n        )\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n  }\r\n\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n      \r\n      /*console.log('options222222');\r\n      console.log(this.state.mutuales);\r\n      console.log(this.state.selectedOption);*/\r\n      options = this.state.mutuales;\r\n    return (\r\n      <div>\r\n        <Select\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={options}\r\n          placeholder=\"Seleccione una Mutual\"\r\n          \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default autocompletarMutual;","import React, { Component } from 'react';\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport '../App.css';\r\nimport { urlRest } from '../datos/Config';\r\nimport * as moment from 'moment';\r\n\r\n/*import MenuIcon from '@material-ui/icons/Menu';*/\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport axios from 'axios';\r\n\r\nimport AutocompletarMutual from '../autocompletarMutual/autocompletarMutual';\r\n/*import { Link } from 'react-router-dom';*/\r\n\r\n\r\n\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nconst EMAIL_REGEX = new RegExp(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\r\n\r\nvar token = '';\r\n\r\n\r\n\r\nclass Paciente extends Component {\r\n  \r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n    pacienteNombre: \"\",\r\n    pacienteApellido:\"\",\r\n    pacienteDni: \"\",\r\n    pacienteCargando: false,\r\n    codPaciente: null,\r\n    pacienteMutual: \"\",\r\n    pacienteMutualNombre: \"\",\r\n    pacienteEmail: \"\",\r\n    pacienteMutualAfiliado:\"\",\r\n    pacienteNacimiento: \"2019-01-01\",\r\n    pacienteCelular: \"\",\r\n    pacienteTelefono: \"\",\r\n    validacionError: false,\r\n    ErrorEmail: false,\r\n    ErrorCelular: false,\r\n    ErrorMensaje: \"\",\r\n    mutualBusq: null,\r\n    UsuarioLogueado:null,\r\n    loading:false,\r\n      };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    \r\n  }\r\n\r\n  \r\n\r\n  handleSubmit(event) {\r\n    //console.log('handleSubmit');\r\n    //console.log(event);\r\n    let paciente = {};\r\n    this.setState({ loading:true,\r\n    });\r\n    paciente.apellido= this.state.pacienteApellido;\r\n    paciente.nombre= this.state.pacienteNombre;\r\n    paciente.codigo= this.state.codPaciente;\r\n    paciente.documentoNro= this.state.pacienteDni;\r\n    paciente.documentoTipo= 1;\r\n    paciente.email= this.state.pacienteEmail;\r\n    paciente.hc= this.state.pacienteDni;\r\n    paciente.mutual= this.state.pacienteMutual;\r\n    paciente.mutualAfiliado= this.state.pacienteMutualAfiliado;\r\n    paciente.mutualNombre= this.state.pacienteMutualNombre;\r\n    paciente.nacimiento= this.state.pacienteNacimiento;\r\n    paciente.telefono= this.state.pacienteTelefono;\r\n    paciente.telefono2= this.state.pacienteCelular;\r\n\r\n    this.actualizarPaciente(paciente);\r\n    \r\n    event.preventDefault();\r\n    // do some login logic here, and if successful:\r\n\r\n\r\n    \r\n    \r\n  }\r\n\r\n  \r\n  handleKeyPress(key) {\r\n    //console.log('handleKeyPress');\r\n    //console.log(key);\r\n    \r\n    if (key.key ==='Enter') {\r\n      if (key.target.id === 'pacienteApellido' || key.target.id === 'pacienteNombre')\r\n      { \r\n        if (this.state.pacienteDni === '')\r\n        { \r\n          //console.log('handleKeyPress Enter');\r\n          this.buscarporNombre();\r\n        }\r\n      }\r\n      if (key.target.id === 'pacienteDni')\r\n      { \r\n        if (this.state.pacienteDni === '')\r\n        { \r\n          if(this.state.pacienteApellido === '' && this.state.pacienteNombre === ''){\r\n            \r\n            this.traerPacientes(this.state.pacienteDni);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //console.log(key);\r\n\r\n    //console.log(key.key);\r\n    //console.log(key.keyCode);\r\n  }\r\n  \r\n\r\n  handleBlur({id, value}) {\r\n    //console.log('handleBlur');\r\n    \r\n    //console.log(value);\r\n    //console.log(id);\r\n    //console.log(obj.target.type);\r\n    \r\n    switch (id) {\r\n      case 'pacienteDni':\r\n        //console.log('pacienteDni');\r\n        if(this.state.pacienteApellido === '' && this.state.pacienteNombre === ''){\r\n          //console.log('this.state.pacienteApellido !==');\r\n          this.traerPacientes(value);\r\n        }\r\n\r\n        break;\r\n      case 'pacienteEmail':\r\n        if ( value !== ''){\r\n        this.validarEmail(value);\r\n        } else {\r\n          this.setState({\r\n            validacionError: false,\r\n            ErrorEmail: false,\r\n            ErrorMensaje: '',\r\n          });\r\n        }\r\n        break;\r\n      case 'pacienteCelular':\r\n        if ( value !== ''){\r\n          this.validarCelular(value);\r\n        } else {\r\n          this.setState({\r\n            validacionError: false,\r\n            ErrorCelular: false,\r\n            ErrorMensaje: '',\r\n          });\r\n          \r\n        }\r\n        break;\r\n      case 'pacienteMutual':\r\n        \r\n        this.traerMutuales(value);\r\n\r\n        break;\r\n\r\n      default:\r\n        //Sentencias_def ejecutadas cuando no ocurre una coincidencia con los anteriores casos\r\n        break;\r\n      }\r\n      this.validar(id, value);\r\n    \r\n  }\r\n\r\n  validar(id, value) {\r\n    //console.log('validar');\r\n    switch (id) {\r\n      case 'pacienteDni':\r\n\r\n        break;\r\n      case 'pacienteEmail':\r\n        if ( value !== ''){\r\n        this.validarEmail(value);\r\n        } else {\r\n          this.setState({\r\n            validacionError: false,\r\n            ErrorEmail: false,\r\n            ErrorMensaje: '',\r\n          });\r\n        }\r\n        break;\r\n      case 'pacienteCelular':\r\n        if ( value !== ''){\r\n          this.validarCelular(value);\r\n        } else {\r\n          this.setState({\r\n            validacionError: false,\r\n            ErrorCelular: false,\r\n            ErrorMensaje: '',\r\n          });\r\n          \r\n        }\r\n        break;\r\n      \r\n      default:\r\n        //Sentencias_def ejecutadas cuando no ocurre una coincidencia con los anteriores casos\r\n        break;\r\n    }\r\n  }\r\n\r\nasync traerPacientes (dni) {\r\n  //console.log('traerPacientes');\r\n  //console.log(urlRest)\r\n  //console.log(this.state.UsuarioLogueado.token);\r\n\r\n  var config = {\r\n    headers: {'Authorization': `Bearer ${token}`}\r\n  };\r\n    if (dni !== '') {\r\n      \r\n      this.setState({\r\n        pacienteCargando: true,\r\n      });\r\n      \r\n      //console.log(`${urlRest}pacientes/?documento=${dni}`);\r\n      //console.log(`${urlRest}pacientes/?nombre=Guille`);\r\n      \r\n      //console.log(config);\r\n      await axios.get(`${urlRest}pacientes/?documento=${dni}`, \r\n        config )\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n            if ( response.data.length !== 0 ){\r\n              /*var mutualBusqueda = {\r\n                value:(response.data[0].mutualCodigo !== null)?response.data[0].mutualCodigo:'',\r\n                label:(response.data[0].mutualNombre !== null)?response.data[0].mutualNombre:'',\r\n              };\r\n              this.setState({\r\n                mutualBusq: mutualBusqueda,\r\n                pacienteCargando: false,\r\n              });*/\r\n              \r\n              //console.log('respuesta 2');\r\n              //console.log(response.data[0].mutualCodigo);\r\n              //console.log(response.data[0]);\r\n              this.traerMutuales((response.data[0].mutual !== null)?response.data[0].mutual:'');\r\n              this.setState({\r\n                pacienteCargando: false,\r\n              });\r\n\r\n              this.setState({\r\n                pacienteNombre: (response.data[0].nombre !== null)?response.data[0].nombre:'',\r\n                pacienteApellido: (response.data[0].apellido !== null)?response.data[0].apellido:'',\r\n                pacienteDni: (response.data[0].documentoNro !== null)?response.data[0].documentoNro:'',\r\n                pacienteCelular: (response.data[0].telefono2 !== null)?response.data[0].telefono2:'',\r\n                pacienteMutual: (response.data[0].mutual  !== null)?response.data[0].mutual:'',\r\n                pacienteMutualNombre: (response.data[0].mutualNombre !== null)?response.data[0].mutualNombre:'',\r\n                pacienteMutualAfiliado: (response.data[0].mutualAfiliado !== null)?response.data[0].mutualAfiliado:'',\r\n                pacienteTelefono: (response.data[0].telefono !== null)?response.data[0].telefono:'',\r\n                codPaciente:(response.data[0].codigo !== null)?response.data[0].codigo:'',\r\n                pacienteEmail: (response.data[0].email !== null)?response.data[0].email:'',\r\n                pacienteNacimiento: (response.data[0].nacimiento !== null)?\r\n                  (moment(response.data[0].nacimiento).format('YYYY-MM-DD') > '1860-01-01')?\r\n                    moment(response.data[0].nacimiento).format('YYYY-MM-DD')\r\n                  :\r\n                    '1980-01-01'\r\n                :\r\n                  '1980-01-01',\r\n              });\r\n              //console.log(response.data[0].nombre);\r\n              \r\n              //this.render();\r\n            } else {\r\n              //console.log('response.data.length == 0');\r\n              alert('El DNI no se encuentra Registrado como perteneciente a un paciente');\r\n            }\r\n        })\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n      this.setState({\r\n          pacienteCargando: false,\r\n        });\r\n        \r\n    }\r\n          \r\n  }\r\n  \r\ntraerMutuales (Codigo) {\r\n  var config = {\r\n    headers: {'Authorization': `Bearer ${this.state.UsuarioLogueado.token}`}\r\n  };\r\n    if (Codigo !== '') {\r\n      //console.log(`${urlRest}mutuales/${Codigo}`);\r\n      axios.get(`${urlRest}mutuales/${Codigo}`, config)\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n            if ( response.data.length !== 0 ){\r\n              this.setState({\r\n                mutualBusq:response.data[0],\r\n                pacienteMutualNombre:response.data[0].nombre,\r\n              });\r\n              //console.log('respuesta fin');\r\n              //console.log(response.data[0])\r\n              this.render();\r\n            } else {\r\n              alert('Mutual no vigente');\r\n              this.setState({\r\n                mutualBusq:null,\r\n                pacienteMutualNombre:'',\r\n                pacienteMutual:'',\r\n              });\r\n            }\r\n        })\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n    }\r\n          \r\n  }\r\n\r\n  validarEmail(email) {\r\n    const emailIsValid = EMAIL_REGEX.test(email);\r\n      /*console.log('validarEmail');\r\n      console.log(emailIsValid);*/\r\n      if(!emailIsValid){\r\n        this.setState({\r\n          validacionError: true,\r\n          ErrorEmail: true,\r\n          ErrorMensaje: 'Ingrese un Correo Correcto',\r\n        });\r\n      } else {\r\n        this.setState({\r\n          validacionError: false,\r\n          ErrorEmail: false,\r\n          ErrorMensaje: '',\r\n        });\r\n      }\r\n\r\n  }\r\n\r\n  validarCelular(numero) {\r\n    //console.log('validarCelular');\r\n    \r\n    \r\n    switch (true) {\r\n      case numero.length <= 9:\r\n          //console.log('numero.length <= 9');\r\n          this.setState({\r\n            validacionError: true,\r\n            ErrorCelular: true,\r\n            ErrorMensaje: 'El Celular tiene menos de 10 numero, verifique la caracteristica',\r\n          });\r\n        break;\r\n      case numero.length >= 14:\r\n          //console.log('numero.length >= 14');\r\n          this.setState({\r\n            validacionError: true,\r\n            ErrorCelular: true,\r\n            ErrorMensaje: 'El Celular tiene mas de 13 numero, verifique que sea correcto',\r\n          });\r\n        break;\r\n      case numero.substr(0, 1) === '0':\r\n          //console.log('numero.substr(0, 1) === 0');\r\n          this.setState({\r\n            validacionError: true,\r\n            ErrorCelular: true,\r\n            ErrorMensaje: 'El primer numero del celular no puede ser 0',\r\n          });\r\n        break;\r\n      \r\n      default:\r\n        //Sentencias_def ejecutadas cuando no ocurre una coincidencia con los anteriores casos\r\n        //console.log('default');\r\n        this.setState({\r\n          validacionError: false,\r\n          ErrorCelular: false,\r\n          ErrorMensaje: '',\r\n        });\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  valueToState = ({ id, value, checked, type }) => {\r\n    //console.log('valueToState');\r\n    if (id === 'pacienteDni') {\r\n      this.setState({\r\n        pacienteNombre: \"\",\r\n        pacienteApellido:\"\",\r\n        pacienteDni: \"\",\r\n        codPaciente: null,\r\n        pacienteMutual: \"\",\r\n        pacienteMutualNombre: \"\",\r\n        pacienteEmail: \"\",\r\n        pacienteMutualAfiliado:\"\",\r\n        pacienteNacimiento: \"2019-01-01\",\r\n        pacienteCelular: \"\",\r\n        pacienteTelefono: \"\",\r\n      });\r\n    }\r\n\r\n    this.setState(() => {\r\n      return { [id]: type === \"checkbox\" ? checked : value };\r\n    });\r\n  };\r\n\r\n  TraerMutual = (Mutual) => {\r\n    //console.log('TraerMutual');\r\n    this.setState({ pacienteMutual: Mutual.value,\r\n                    pacienteMutualNombre: Mutual.label,\r\n                    mutualBusq: null\r\n                    });\r\n\r\n  };\r\n\r\n  async actualizarPaciente (Paciente) {\r\n    //console.log(`actualizarPaciente`);\r\n    //console.log(Paciente);\r\n    let actualizarPacienteEstado = 0;\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${this.state.UsuarioLogueado.token}`}\r\n    };\r\n    \r\n    if (Paciente.codigo == null) {\r\n      //console.log(`Agregar`);\r\n      //console.log(`${urlRest}pacientes/`);\r\n      await axios.post(`${urlRest}pacientes/`, {\r\n        apellido: this.state.pacienteApellido,\r\n        nombre: this.state.pacienteNombre,\r\n        //codigo: this.state.codPaciente,\r\n        documentoNro: this.state.pacienteDni,\r\n        documentoTipo: 1,\r\n        email: this.state.pacienteEmail,\r\n        hc: this.state.pacienteDni,\r\n        mutual: this.state.pacienteMutual,\r\n        mutualAfiliado: this.state.pacienteMutualAfiliado,\r\n        mutualNombre: this.state.pacienteMutualNombre,\r\n        nacimiento: this.state.pacienteNacimiento,\r\n        telefono: this.state.pacienteTelefono,\r\n        telefono2: this.state.pacienteCelular,\r\n      }, config)\r\n      .then(function (response) {\r\n        //console.log('response');\r\n        //console.log(response);\r\n        Paciente.codigo = response.data;\r\n        actualizarPacienteEstado = response.status;\r\n        this.setState({ loading:false,\r\n        });\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log('error');\r\n        console.log(error.response);\r\n        this.setState({ loading:false,\r\n        });\r\n      }); \r\n\r\n    } else {\r\n      //console.log(`Actualizar`);\r\n      //console.log(`${urlRest}pacientes/${this.state.codPaciente}`);\r\n      await axios.put(`${urlRest}pacientes/${this.state.codPaciente}`, {\r\n        apellido: this.state.pacienteApellido,\r\n        nombre: this.state.pacienteNombre,\r\n        codigo: this.state.codPaciente,\r\n        documentoNro: this.state.pacienteDni,\r\n        documentoTipo: 1,\r\n        email: this.state.pacienteEmail,\r\n        hc: this.state.pacienteDni,\r\n        mutual: this.state.pacienteMutual,\r\n        mutualAfiliado: this.state.pacienteMutualAfiliado,\r\n        mutualNombre: this.state.pacienteMutualNombre,\r\n        nacimiento: this.state.pacienteNacimiento,\r\n        telefono: this.state.pacienteTelefono,\r\n        telefono2: this.state.pacienteCelular,\r\n      }, config)\r\n      .then(function (response) {\r\n        //console.log('response');\r\n        //console.log(response);\r\n        actualizarPacienteEstado = response.status;\r\n        \r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.log('error');\r\n        console.log(error.response);\r\n        \r\n      }); \r\n    }\r\n    \r\n    this.setState({ loading:false,\r\n    });\r\n    //console.log('Paciente');\r\n    //console.log(Paciente);\r\n    //console.log(this.state.UsuarioLogueado);\r\n\r\n    if (actualizarPacienteEstado === 200) {\r\n      //console.log('LoginUsuarioEstado === 200');\r\n      //console.log(LoginUsuario);\r\n      this.props.history.push({ pathname: '/Turno', Paciente : Paciente, Usuario: this.state.UsuarioLogueado });\r\n    } else {\r\n      alert('Error al Registrar Paciente vuelve a intentar en un segundo');\r\n      \r\n    }\r\n\r\n    //this.props.history.push({ pathname: '/Turno', Paciente : Paciente, Usuario: this.state.UsuarioLogueado });\r\n    \r\n    \r\n}\r\n\r\n  post () {\r\n      //console.log(`${urlRest}cirugias/`);\r\n      axios.post(`${urlRest}cirugias/`, {\r\n        nombre: 'Cirugia Guille111'\r\n      })\r\n      .then(function (response) {\r\n        console.log('response');\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('error');\r\n        console.log(error.response);\r\n      }); \r\n  }\r\n\r\n  buscarporNombre () {\r\n    //console.log(`buscarporNombre`);\r\n    let NombreBusq = '';\r\n    if (this.state.pacienteApellido !== '') {\r\n      if (this.state.pacienteNombre !== '') {\r\n        NombreBusq =  `${this.state.pacienteApellido} ${this.state.pacienteNombre}`;\r\n      } else {\r\n        NombreBusq =  `${this.state.pacienteApellido}`;\r\n      }\r\n    } else {\r\n      if (this.state.pacienteNombre !== '') {\r\n        NombreBusq =  `${this.state.pacienteNombre}`;\r\n      } else {\r\n        NombreBusq =  ``;\r\n      }\r\n    }\r\n\r\n    this.props.history.push({ pathname: '/BuscarporNombre', Usuario: this.state.UsuarioLogueado, Busqueda: NombreBusq });\r\n  }\r\n\r\n  turnosPaciente () {\r\n    //console.log(`turnosPaciente`);\r\n    //console.log(this.state.codPaciente);\r\n    if (this.state.codPaciente !== null)\r\n    { \r\n      let pacienteLocal = {};\r\n\r\n      pacienteLocal.apellido= this.state.pacienteApellido;\r\n      pacienteLocal.nombre= this.state.pacienteNombre;\r\n      pacienteLocal.codigo= this.state.codPaciente;\r\n      pacienteLocal.documentoNro= this.state.pacienteDni;\r\n      pacienteLocal.documentoTipo= 1;\r\n      pacienteLocal.email= this.state.pacienteEmail;\r\n      pacienteLocal.hc= this.state.pacienteDni;\r\n      pacienteLocal.mutual= this.state.pacienteMutual;\r\n      pacienteLocal.mutualAfiliado= this.state.pacienteMutualAfiliado;\r\n      pacienteLocal.mutualNombre= this.state.pacienteMutualNombre;\r\n      pacienteLocal.nacimiento= this.state.pacienteNacimiento;\r\n      pacienteLocal.telefono= this.state.pacienteTelefono;\r\n      pacienteLocal.telefono2= this.state.pacienteCelular;\r\n\r\n      this.props.history.push({ pathname: '/TurnoPaciente', Usuario: this.state.UsuarioLogueado, Paciente: pacienteLocal });\r\n    } else {\r\n      alert('Debe ingresar en un paciente');\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n\r\n  componentDidMount() {\r\n    \r\n    //console.log('El componente está disponible en el DOM');\r\n    //console.log('Inicio');\r\n    //console.log(this.props.location.PacienteDni);\r\n    token = sessionStorage.getItem(\"AppOfertaTurnoToken\");\r\n\r\n    if (this.props.location.Usuario !== undefined) {\r\n      \r\n      this.setState({ UsuarioLogueado: this.props.location.Usuario,\r\n      });\r\n      \r\n    }\r\n    if (this.props.location.PacienteDni !== undefined) {\r\n      this.traerPacientes(this.props.location.PacienteDni);\r\n      \r\n    }\r\n    // inicio\r\n    //localStorage.removeItem('AppPaciente');\r\n  }\r\n\r\n\r\n\r\n  //<pre>{JSON.stringify(this.state, null, 2)}</pre>\r\nrender() {\r\n  //console.log('render paciente');\r\n  \r\n\r\n  return (\r\n    <Grid fluid>\r\n      \r\n      { this.state.UsuarioLogueado == null ?\r\n        <div>\r\n          <p>Debe ingresar Usuario, ir a</p>\r\n          <button onClick={() => { this.props.history.push({ pathname: '/'})}} >login</button>\r\n        </div>\r\n        :\r\n        <LoadingOverlay\r\n        active={this.state.pacienteCargando}\r\n        spinner\r\n        text='Buscando paciente ...'\r\n        >\r\n          <Row>\r\n            <Col xs={12} md={12}>\r\n              <Card >\r\n                <CardHeader\r\n                  title=\"Oferta de Turnos\"\r\n                  subheader =\r\n                  {\r\n                    this.setState.UsuarioLogueado === null ?\r\n                      \"Subtitulo\"\r\n                    :\r\n                      \"Usuario: \" + this.state.UsuarioLogueado.nombre\r\n                  }\r\n                  \r\n                />\r\n                <CardContent>\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    <Row>\r\n                      <Col xs={12} md={12}>\r\n                        <Card >\r\n                          <CardContent>\r\n                            <Row>\r\n                              <Col xs={12} md={12}>\r\n                                <Typography variant=\"h4\" gutterBottom>\r\n                                  Paciente\r\n                                </Typography>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={3}>\r\n                                  <TextField\r\n                                    id=\"pacienteDni\"\r\n                                    label=\"DNI\"\r\n                                    margin=\"normal\"\r\n                                    autoComplete='off'\r\n                                    value={this.state.pacienteDni}\r\n                                    autoFocus \r\n                                    required\r\n                                    onChange={event => this.valueToState(event.target)}\r\n                                    onBlur={event => this.handleBlur(event.target)}\r\n                                    onKeyPress={event => this.handleKeyPress(event)}\r\n                                  />\r\n                                </Col>\r\n                                <Col xs={12} md={3}>\r\n                                    <TextField\r\n                                      id=\"pacienteApellido\"\r\n                                      label=\"Apellido\"\r\n                                      value={this.state.pacienteApellido}\r\n                                      fullWidth\r\n                                      margin=\"normal\"\r\n                                      autoComplete='off'\r\n                                      required\r\n                                      \r\n                                      onChange={event => this.valueToState(event.target)}\r\n                                      onBlur={event => this.handleBlur(event.target)}\r\n                                      onKeyPress={event => this.handleKeyPress(event)}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={12} md={3}>\r\n                                    <TextField\r\n                                      id=\"pacienteNombre\"\r\n                                      label=\"Nombre\"\r\n                                      value={this.state.pacienteNombre}\r\n                                      fullWidth\r\n                                      margin=\"normal\"\r\n                                      autoComplete='off'\r\n                                      required\r\n                                      \r\n                                      onChange={event => this.valueToState(event.target)}\r\n                                      onBlur={event => this.handleBlur(event.target)}\r\n                                      onKeyPress={event => this.handleKeyPress(event)}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={12} md={3}>\r\n                                  <Row>\r\n                                    <Button variant=\"contained\"\r\n                                      className= \"PacienteBotonera\"\r\n                                      onClick={() => { this.buscarporNombre() }}\r\n                                    >\r\n                                      Buscar Por Nombre\r\n                                    </Button> \r\n                                    </Row>\r\n                                    <Row>\r\n                                      <p></p>\r\n                                    </Row>\r\n                                    <Row>\r\n                                    <Button variant=\"contained\" color=\"primary\" \r\n                                      className= \"PacienteBotonera\"\r\n                                      onClick={() => { this.turnosPaciente() }}\r\n                                    >\r\n                                      Consultar/Anular Turnos\r\n                                    </Button> \r\n                                  </Row>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col xs={12} md={3}>\r\n                                  <TextField\r\n                                    id=\"pacienteMutual\"\r\n                                    label=\"Codigo Mutal\"\r\n                                    value={this.state.pacienteMutual}\r\n                                    margin=\"normal\"\r\n                                    autoComplete='off'\r\n                                    required\r\n                                    \r\n                                    onChange={event => this.valueToState(event.target)}\r\n                                    onBlur={event => this.handleBlur(event.target)}\r\n                                  />\r\n                              </Col>\r\n                              <Col xs={12} md={6} className= \"PacienteMutual\">\r\n                                <AutocompletarMutual \r\n                                MutualBusq={this.state.mutualBusq}\r\n                                onSelectMutual={this.TraerMutual}\r\n                                />\r\n                                  \r\n                              </Col>\r\n                              <Col xs={12} md={3}>\r\n                                \r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col xs={12} md={3}>\r\n                                <TextField\r\n                                  id=\"pacienteMutualAfiliado\"\r\n                                  label=\"Numero Afiliado\"\r\n                                  value={this.state.pacienteMutualAfiliado}\r\n                                  fullWidth\r\n                                  \r\n                                  margin=\"normal\"\r\n                                  autoComplete='off'\r\n                                  onChange={event => this.valueToState(event.target)}\r\n                                  onBlur={event => this.handleBlur(event.target)}\r\n                                />\r\n                              </Col>\r\n                              <Col xs={12} md={3}>\r\n                              <TextField\r\n                                id=\"pacienteNacimiento\"\r\n                                label=\"Fecha Nacimiento\"\r\n                                value={this.state.pacienteNacimiento}\r\n                                type=\"date\"\r\n                                \r\n                                margin=\"normal\"\r\n                                onChange={event => this.valueToState(event.target)}\r\n                                onBlur={event => this.handleBlur(event.target)}\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                }}\r\n                              />\r\n                              </Col>\r\n                              <Col xs={12} md={3}>\r\n                              \r\n                                  \r\n                            \r\n                              </Col>\r\n                              <Col xs={12} md={3}>\r\n                              \r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col xs={12} md={6}>\r\n                                <TextField\r\n                                  id=\"pacienteEmail\"\r\n                                  label=\"Email\"\r\n                                  value={this.state.pacienteEmail}\r\n                                  /*className={classes.textField}*/\r\n                                  type=\"email\"\r\n                                  name=\"email\"\r\n                                  autoComplete='off'\r\n                                  \r\n                                  //autoComplete=\"email\"\r\n                                  margin=\"normal\"\r\n                                  fullWidth\r\n                                  \r\n                                  onChange={event => this.valueToState(event.target)}\r\n                                  onBlur={event => this.handleBlur(event.target)}\r\n                                  InputLabelProps={{\r\n                                    error: this.state.ErrorEmail,\r\n                                  }}\r\n                                  /*variant=\"outlined\"*/\r\n                                />\r\n                              </Col>\r\n                              <Col xs={12} md={3}>\r\n                                <TextField\r\n                                  id=\"pacienteCelular\"\r\n                                  label=\"Celular\"\r\n                                  value={this.state.pacienteCelular}\r\n                                  fullWidth\r\n                                  margin=\"normal\"\r\n                                  autoComplete='off'\r\n                                  InputLabelProps={{\r\n                                    error: this.state.ErrorCelular,\r\n                                  }}\r\n                                  required\r\n                                  onChange={event => this.valueToState(event.target)}\r\n                                  onBlur={event => this.handleBlur(event.target)}\r\n                                />\r\n                              </Col>\r\n                              <Col xs={12} md={3}>\r\n                                <TextField\r\n                                  id=\"pacienteTelefono\"\r\n                                  label=\"Telefono\"\r\n                                  value={this.state.pacienteTelefono}\r\n                                  fullWidth\r\n                                  margin=\"normal\"\r\n                                  autoComplete='off'\r\n                                  \r\n                                  onChange={event => this.valueToState(event.target)}\r\n                                  onBlur={event => this.handleBlur(event.target)}\r\n                                  \r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                              <Col xs={12} md={12}>\r\n                              {\r\n                                this.state.validacionError ?\r\n                                  <div className=\"ErrorPaciente\">\r\n                                    {this.state.ErrorMensaje}\r\n                                  </div>  :\r\n                                  <p></p>\r\n                              }\r\n                                \r\n                              </Col>\r\n                            <Row>\r\n                            </Row>\r\n                          </CardContent>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <p></p>\r\n                    </Row>\r\n                    <Row >\r\n                      <Col xs={12} md={6} end=\"xs\">\r\n                        <Button variant=\"contained\" size=\"large\" color=\"secondary\" \r\n                          onClick={() => { this.props.history.push({ pathname: '/'})}}\r\n                          >\r\n                          LOGOUT  \r\n                          <Icon>exit_to_app</Icon>\r\n                        </Button>\r\n                      </Col>\r\n                      <Col xs={12} md={6} end=\"xs\">\r\n                        <Row end=\"xs\">\r\n                          <div className= \"wrapper\">\r\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                              type=\"submit\"\r\n                              disabled={this.state.validacionError || this.state.loading}\r\n                              >\r\n                              Dar Turno / Guardar \r\n                              <Icon>send</Icon>\r\n                            </Button>\r\n                            {this.state.loading && <CircularProgress size={24} className=\"buttonProgress\" />}\r\n                          </div>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                </CardContent>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </LoadingOverlay>  \r\n      }\r\n      \r\n    </Grid>\r\n    \r\n  );\r\n}\r\n}\r\n\r\n\r\nexport default Paciente;","import React from 'react';\r\nimport Select from 'react-select';\r\n//import Estudios from '../datos/estudios';\r\n\r\nimport axios from 'axios';\r\nimport { urlRest } from '../datos/Config';\r\n\r\n\r\nvar options = [];\r\nvar token = '';\r\n\r\nclass autocompletarEstudio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOption: null,\r\n      estudios:[],\r\n      };\r\n\r\n  }\r\n\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    this.props.onSelectEstudio(selectedOption); \r\n    //console.log(`Option selected:`, selectedOption);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log('El componente Mutuales está disponible en el DOM');\r\n    token = sessionStorage.getItem(\"AppOfertaTurnoToken\");\r\n    this.TraerEstudios();\r\n  }\r\n\r\n  componentWillReceiveProps(next_props) {\r\n    //console.log('componentWillReceiveProps');\r\n\r\n\r\n    if (next_props.MutualBusq !== undefined && next_props.MutualBusq !== null) \r\n    {\r\n      if (next_props.MutualBusq.nombre !== undefined ) \r\n        {\r\n          var estudioSeleccionado= {};\r\n          //console.log('next_props.MutualBusq.nombre')\r\n          //console.log(next_props.MutualBusq);\r\n          \r\n          estudioSeleccionado = {\r\n            value:next_props.MutualBusq.codigo,\r\n            label:next_props.MutualBusq.nombre,\r\n          };\r\n          this.setState({selectedOption: estudioSeleccionado,});\r\n        }\r\n      if (next_props.MutualBusq.nombre === undefined ) \r\n        {\r\n          \r\n          //console.log('next_props.MutualBusq.nombre undefined')\r\n          //console.log(next_props.MutualBusq);\r\n\r\n          this.setState({selectedOption: next_props.MutualBusq,});\r\n        }\r\n    }\r\n  }\r\n  \r\n  TraerEstudios = () => {\r\n    var  cart = [];\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${token}`}\r\n    };\r\n    //console.log(`http://ServerGya:8080/api/mutuales`);\r\n      axios.get(`${urlRest}estudios`, config)\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n          //console.log(response.data.length)\r\n          if ( response.data.length !== 0 ){\r\n            var i;\r\n            for (i = 0; i < response.data.length; i++) { \r\n              //response.data[i].nombre;\r\n              cart[i] = {\r\n                value : response.data[i].codigo,\r\n                label : response.data[i].nombre\r\n              };\r\n           \r\n              //this.options[value] = response.data[i].codigo;\r\n              //this.options[label] = response.data[i].nombre;\r\n            }\r\n            \r\n            this.setState({\r\n              estudios:cart,\r\n              \r\n            });\r\n\r\n            \r\n          }\r\n            }\r\n        )\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n  }\r\n\r\n  handleKeyPress(key) {\r\n    //console.log('handleKeyPress');\r\n    //console.log(key);\r\n    \r\n    if (key.key ==='Enter') {\r\n      //console.log('handleKeyPress Enter');\r\n      \r\n\r\n    }\r\n    //console.log(key);\r\n\r\n    //console.log(key.key);\r\n    //console.log(key.keyCode);\r\n  }\r\n\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n    options = this.state.estudios;\r\n\r\n    return (\r\n      <div>\r\n        <Select\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          onKeyDown={event => this.handleKeyPress(event)}\r\n          options={options}\r\n          placeholder=\"Seleccione un Estudio\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default autocompletarEstudio;","import React from 'react';\r\nimport Select from 'react-select';\r\n//import Prestadores from '../datos/prestadores';\r\n\r\nimport axios from 'axios';\r\nimport { urlRest } from '../datos/Config';\r\n\r\n\r\nvar options = [];\r\nvar token = '';\r\n\r\nclass autocompletarPrestador extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOption: null,\r\n      prestadores:[],\r\n      };\r\n\r\n  }\r\n\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    this.props.onSelectPrestador(selectedOption.value); \r\n    //console.log(`Option selected:`, selectedOption);\r\n  }\r\n  componentDidMount() {\r\n    //console.log('El componente Mutuales está disponible en el DOM');\r\n    \r\n    token = sessionStorage.getItem(\"AppOfertaTurnoToken\");\r\n    this.TraerPrestadores();\r\n  }\r\n\r\n  componentWillReceiveProps(next_props) {\r\n    //console.log('componentWillReceiveProps');\r\n\r\n\r\n    if (next_props.MutualBusq !== undefined && next_props.MutualBusq !== null) \r\n    {\r\n      if (next_props.MutualBusq.nombre !== undefined ) \r\n        {\r\n          var prestadorSeleccionado= {};\r\n          //console.log('next_props.MutualBusq.nombre')\r\n          //console.log(next_props.MutualBusq);\r\n          \r\n          prestadorSeleccionado = {\r\n            value:next_props.MutualBusq.codigo,\r\n            label:next_props.MutualBusq.nombre,\r\n          };\r\n          this.setState({selectedOption: prestadorSeleccionado,});\r\n        }\r\n      if (next_props.MutualBusq.nombre === undefined ) \r\n        {\r\n          \r\n          //console.log('next_props.MutualBusq.nombre undefined')\r\n          //console.log(next_props.MutualBusq);\r\n\r\n          this.setState({selectedOption: next_props.MutualBusq,});\r\n        }\r\n    }\r\n  }\r\n  \r\n  TraerPrestadores = () => {\r\n    var  cart = [];\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${token}`}\r\n    };\r\n    //console.log(`http://ServerGya:8080/api/mutuales`);\r\n      axios.get(`${urlRest}prestadores`, config)\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n          \r\n          //console.log(response.data.length)\r\n          if ( response.data.length !== 0 ){\r\n            var i;\r\n            for (i = 0; i < response.data.length; i++) { \r\n              //response.data[i].nombre;\r\n              cart[i] = {\r\n                value : response.data[i].codigo,\r\n                label : response.data[i].nombre\r\n              };\r\n           \r\n              //this.options[value] = response.data[i].codigo;\r\n              //this.options[label] = response.data[i].nombre;\r\n            }\r\n            \r\n            this.setState({\r\n              prestadores:cart,\r\n              \r\n            });\r\n\r\n            \r\n          }\r\n            }\r\n        )\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n  }\r\n\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n    options = this.state.prestadores;\r\n    return (\r\n      <div>\r\n        <Select\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={options}\r\n          placeholder=\"Seleccione un Prestador\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default autocompletarPrestador;","import React from 'react';\r\nimport Select from 'react-select';\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\n//import Prestadores from '../datos/prestadores';\r\n\r\nimport axios from 'axios';\r\nimport { urlRest } from '../datos/Config';\r\n\r\nvar token = '';\r\n\r\n\r\nclass autocompletarPrestador extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedPrestador: null,\r\n      selectedEspecialidades:null,\r\n      especialidades:[],\r\n      prestadores:[],\r\n      prestadoresFiltro:[],\r\n      };\r\n\r\n  }\r\n\r\n  handleChangeEspecialidades = (selectedEspecialidades) => {\r\n    this.setState({ selectedEspecialidades });\r\n    //this.props.onSelectEspecialidad(selectedEspecialidades.value); \r\n   //console.log(`handleChangeEspecialidades:`, selectedEspecialidades);\r\n   //console.log(this.state.prestadores);\r\n   //console.log(this.state.prestadores.filter(prestador => prestador.especialidad === 88));\r\n\r\n   var AbuscarPrestador= this.state.prestadores.filter(prestador => prestador.especialidad === selectedEspecialidades.value);\r\n   this.setState({  prestadoresFiltro: AbuscarPrestador, \r\n                    selectedPrestador: '',\r\n                  });\r\n   //console.log( AbuscarPrestador);\r\n\r\n  }\r\n\r\n  handleChangePrestador = (selectedPrestador) => {\r\n    this.setState({ selectedPrestador });\r\n    this.props.onSelectEspecialidad(selectedPrestador.value); \r\n    //console.log(`handleChangePrestador:`, selectedPrestador);\r\n  }\r\n \r\n  componentDidMount() {\r\n    //console.log('El componente Mutuales está disponible en el DOM');\r\n    token = sessionStorage.getItem(\"AppOfertaTurnoToken\");\r\n    this.TraerEspecialidades();\r\n    this.TraerPrestadores();\r\n  }\r\n\r\n  componentWillReceiveProps(next_props) {\r\n    //console.log('componentWillReceiveProps');\r\n\r\n\r\n    if (next_props.MutualBusq !== undefined && next_props.MutualBusq !== null) \r\n    {\r\n      if (next_props.MutualBusq.nombre !== undefined ) \r\n        {\r\n          var especialidadSeleccionada= {};\r\n          //console.log('next_props.MutualBusq.nombre')\r\n          //console.log(next_props.MutualBusq);\r\n          \r\n          especialidadSeleccionada = {\r\n            value:next_props.MutualBusq.codigo,\r\n            label:next_props.MutualBusq.nombre,\r\n          };\r\n          this.setState({selectedEspecialidades: especialidadSeleccionada,});\r\n        }\r\n      if (next_props.MutualBusq.nombre === undefined ) \r\n        {\r\n          \r\n          //console.log('next_props.MutualBusq.nombre undefined')\r\n          //console.log(next_props.MutualBusq);\r\n\r\n          this.setState({selectedEspecialidades: next_props.MutualBusq,});\r\n        }\r\n    }\r\n  }\r\n  \r\n  TraerEspecialidades = () => {\r\n    var  cart = [];\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${token}`}\r\n    };\r\n    //console.log(`http://ServerGya:8080/api/mutuales`);\r\n      axios.get(`${urlRest}especialidades`,config)\r\n        .then(response => {\r\n          //console.log('respuestaEspecialidades');\r\n          //console.log(response);\r\n          \r\n          //console.log(response.data.length)\r\n          if ( response.data.length !== 0 ){\r\n            var i;\r\n            for (i = 0; i < response.data.length; i++) { \r\n              //response.data[i].nombre;\r\n              cart[i] = {\r\n                value : response.data[i].codigo,\r\n                label : response.data[i].nombre,\r\n              };\r\n           \r\n              //this.options[value] = response.data[i].codigo;\r\n              //this.options[label] = response.data[i].nombre;\r\n            }\r\n            \r\n            this.setState({\r\n              especialidades:cart,\r\n              \r\n            });\r\n\r\n            \r\n          }\r\n            }\r\n        )\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n  }\r\n\r\n  TraerPrestadores = () => {\r\n    var  cart = [];\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${token}`}\r\n    };\r\n    //console.log(`http://ServerGya:8080/api/mutuales`);\r\n      axios.get(`${urlRest}prestadores`, config)\r\n        .then(response => {\r\n          //console.log('respuestaPrestadores');\r\n          //console.log(response);\r\n          \r\n          //console.log(response.data.length)\r\n          if ( response.data.length !== 0 ){\r\n            var i;\r\n            for (i = 0; i < response.data.length; i++) { \r\n              //response.data[i].nombre;\r\n              cart[i] = {\r\n                value : response.data[i].codigo,\r\n                label : response.data[i].nombre,\r\n                especialidad : response.data[i].especialidad,\r\n              };\r\n           \r\n              //this.options[value] = response.data[i].codigo;\r\n              //this.options[label] = response.data[i].nombre;\r\n            }\r\n            \r\n            this.setState({\r\n              prestadores:cart,\r\n              \r\n            });\r\n\r\n            \r\n          }\r\n            }\r\n        )\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { selectedEspecialidades,selectedPrestador } = this.state;\r\n    \r\n    return (\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Select\r\n              value={selectedEspecialidades}\r\n              onChange={this.handleChangeEspecialidades}\r\n              options={this.state.especialidades}\r\n              placeholder=\"Seleccione una Especialidad\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <p></p>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Select\r\n              value={selectedPrestador}\r\n              onChange={this.handleChangePrestador}\r\n              options={this.state.prestadoresFiltro}\r\n              placeholder=\"Seleccione un Prestador\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default autocompletarPrestador;","import React, { Component } from 'react';\r\n\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport '../App.css';\r\n\r\n/*import MenuIcon from '@material-ui/icons/Menu';*/\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\n//import red from '@material-ui/core/colors/red';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport * as moment from 'moment';\r\n\r\n\r\n\r\n\r\n\r\nconst ButtonVerde = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(green[500]),\r\n    backgroundColor: green[500],\r\n    margin: '5px',\r\n    //minWidth: 30,\r\n    width: '100%',\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n}))(Button);\r\n/*\r\nconst ButtonRojo = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n    margin: '5px',\r\n    //minWidth: 30,\r\n    width: '100%',\r\n    '&:hover': {\r\n      backgroundColor: red[700],\r\n    },\r\n  },\r\n}))(Button);\r\n*/\r\n\r\n\r\n\r\n\r\n\r\nclass TurnosHorarios extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Abuscar: null,\r\n      turnos: []\r\n      };\r\n      \r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    //console.log('El componente está disponible en el DOM');\r\n    //console.log('componentDidMount');\r\n    //console.log(moment().format());\r\n    //console.log(moment().format('YYYY-MM-DD'));\r\n    // inicio\r\n    //console.log('this.props.Abuscar.fecha');\r\n    //console.log(this.props.Abuscar);\r\n    this.setState({turnos: this.props.Abuscar,});\r\n  }\r\n\r\n  componentWillReceiveProps(next_props) {\r\n    //console.log('componentWillReceiveProps');\r\n\r\n    if (next_props.Abuscar !== undefined && next_props.Abuscar !== null) \r\n    {\r\n      \r\n      //console.log('next_props.Abuscar.fecha');\r\n      //console.log(next_props.Abuscar.fecha);\r\n      if (next_props.Abuscar.fecha !== undefined && next_props.Abuscar.fecha !== null) {\r\n        this.setState({turnos: next_props.Abuscar,});\r\n      }\r\n      \r\n\r\n    }\r\n  }\r\n\r\n  seleccionarTurno = (turno) => {\r\n    //console.log('seleccionarTurno');\r\n    //console.log(turno);\r\n    this.props.onSelectTurno(turno);\r\n\r\n  }\r\n\r\n  render() {\r\n    var TurnoCont = this.state.turnos;\r\n    var  strToComponentsTurnos =\r\n      TurnoCont.map( (turno, i) => {\r\n        return(\r\n        <Col xs={6} md={3} key = {i}>\r\n              <ButtonVerde \r\n                variant=\"contained\" \r\n                onClick={() => { this.seleccionarTurno(turno) }}\r\n                >\r\n                {moment(turno.hora).format('HH:mm')}\r\n              </ButtonVerde>\r\n        </Col>\r\n        )});\r\n    return (\r\n      <Grid fluid>\r\n          <Card >\r\n            <CardContent >\r\n                <Row>\r\n                  {strToComponentsTurnos}\r\n                </Row>\r\n            </CardContent>\r\n          </Card>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnosHorarios;","import React, { Component } from 'react';\r\n\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport '../App.css';\r\n\r\n\r\n\r\n/*import MenuIcon from '@material-ui/icons/Menu';*/\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\n//import red from '@material-ui/core/colors/red';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport * as moment from 'moment';\r\n\r\n\r\n\r\n\r\n\r\nconst ButtonVerde = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(green[500]),\r\n    backgroundColor: green[500],\r\n    margin: '5px',\r\n    //minWidth: 30,\r\n    width: '100%',\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n}))(Button);\r\n/*\r\nconst ButtonRojo = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n    margin: '5px',\r\n    //minWidth: 30,\r\n    width: '100%',\r\n    '&:hover': {\r\n      backgroundColor: red[700],\r\n    },\r\n  },\r\n}))(Button);\r\n*/\r\n\r\n\r\n\r\n\r\nclass TurnosHorarios extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fechas: null,\r\n      turnos: []\r\n      };\r\n      \r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    //console.log('El componente está disponible en el DOM');\r\n    //console.log('componentDidMount');\r\n    //console.log(moment().format());\r\n    //console.log(moment().format('YYYY-MM-DD'));\r\n    // inicio\r\n    \r\n    //console.log(this.props.Abuscar);\r\n    this.setState({fechas: this.props.Abuscar,});\r\n\r\n    \r\n  }\r\n\r\n  componentWillReceiveProps(next_props) {\r\n    //console.log('componentWillReceiveProps');\r\n\r\n    if (next_props.Abuscar !== undefined && next_props.Abuscar !== null) \r\n    {\r\n     \r\n      this.setState({fechas: next_props.Abuscar,});\r\n    }\r\n  }\r\n\r\n  seleccionarTurno = (turno) => {\r\n    //console.log('turno Fecha');\r\n    //console.log(turno);\r\n    \r\n    //console.log(moment(turno.fecha).format('YYYY-MM-DD'));\r\n    this.props.onSelectFecha(moment(turno.fecha).format('YYYY-MM-DD'));\r\n\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  render() {\r\n    var TurnoFechas = this.state.fechas;\r\n    var  strToComponentsTurnos =\r\n      TurnoFechas !== null ?\r\n      TurnoFechas.map( (turno, i) => (\r\n        <Col xs={6} md={3} key = {i}>\r\n          <ButtonVerde \r\n            variant=\"contained\" \r\n            onClick={() => { this.seleccionarTurno(turno) }}\r\n            >\r\n            {moment(turno.fecha).format('DD/MM/YYYY')}\r\n          </ButtonVerde>\r\n        </Col>\r\n        ))\r\n        :\r\n        <p></p>\r\n        ;\r\n    return (\r\n      <Grid fluid>\r\n          <Card >\r\n            <CardContent >\r\n                <Row>\r\n                  {strToComponentsTurnos}\r\n                </Row>\r\n            </CardContent>\r\n          </Card>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnosHorarios;","import React, { Component } from 'react';\r\n\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport '../App.css';\r\n\r\n\r\nimport AutocompletarEstudio from '../autocompletarEstudio/autocompletarEstudio';\r\nimport AutocompletarPrestador from '../autocompletarPrestador/autocompletarPrestador';\r\nimport AutocompletarEspecialidad from '../autocompletarEspecialidad/autocompletarEspecialidad';\r\nimport TurnosHorarios from '../turnoHorarios/turnosHorarios';\r\nimport TurnoDias from '../turnoDias/turnoDias';\r\n\r\n/*import MenuIcon from '@material-ui/icons/Menu';*/\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport * as moment from 'moment';\r\nimport axios from 'axios';\r\nimport { urlRest } from '../datos/Config';\r\n\r\nclass TurnoDetalle extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      codEstudio: null,\r\n      estudioNombre: '',\r\n      codPrestador: null,\r\n      codEspecialidad: null,\r\n      fechaEstudio: null,\r\n      optionEstudio: \"estudio\",\r\n      turnoAbuscar: null,\r\n      turnoAbuscarHora: null,\r\n      codTurno:{},\r\n      msjConfirmar: false,\r\n      TurnoConfimado: null,\r\n      fechaSeleccionada: false,\r\n      pacienteLocal:null,\r\n      UsuarioLogueado:null,\r\n      fechasTurnos:[],\r\n      turnosDisponibles:[],\r\n      loading:false,\r\n      msjTurnoConfirmado:false,\r\n      msjTurnoConfirmadoMsj: '',\r\n      mensajeError:{\r\n        open:false,\r\n        msj:'',\r\n      },\r\n      };\r\n    \r\n      this.TraerEstudio = this.TraerEstudio.bind(this);\r\n      this.TraerPrestador = this.TraerPrestador.bind(this);\r\n      this.TraerEspecilidad = this.TraerEspecilidad.bind(this);\r\n      this.validar = this.validar.bind(this);\r\n      \r\n  }\r\n\r\n  CerrarmsjConfirmar = () => {\r\n    this.setState({msjConfirmar: false,\r\n                    TurnoConfimado: 'No',\r\n    });\r\n  }\r\n\r\n  ConfirmarmsjConfirmar = () => {\r\n    \r\n    this.setState({msjConfirmar: false,\r\n                    TurnoConfimado: 'Si',\r\n                    turnoAbuscar: null,\r\n                     fechaEstudio: null,\r\n    });\r\n    this.actualizarTurno();\r\n    //console.log('Turno Registrado');\r\n  }\r\n\r\n  CerrarmsjTurnoConfirmado = () => {\r\n    this.setState({msjTurnoConfirmado: false,\r\n    });\r\n  }\r\n  CerrarmsjError = () => {\r\n    var mensajeError = this.state.mensajeError;\r\n    mensajeError['open'] = false;\r\n    mensajeError['msj'] = '';\r\n    \r\n    this.setState({ mensajeError: mensajeError,\r\n      });\r\n  }\r\n\r\n  \r\n\r\n  async TraerEstudio(EstudioCod) { \r\n    //console.log('TraerEstudio');\r\n    //console.log(EstudioCod);\r\n    await this.setState({ codEstudio: EstudioCod.value,\r\n                    estudioNombre: EstudioCod.label,\r\n                    turnoAbuscar: null});\r\n    this.validar();\r\n  }\r\n\r\n  async TraerPrestador(PrestadorCod) {\r\n    await this.setState({codPrestador: PrestadorCod,\r\n                    turnoAbuscar: null});\r\n    this.validar();\r\n  };\r\n\r\n  async TraerEspecilidad(EspecilidadCod) { \r\n    \r\n    await this.setState({codEspecialidad: EspecilidadCod,\r\n                    turnoAbuscar: null});\r\n    this.validar();\r\n\r\n  };\r\n\r\n  TraerTurno = (TurnoCod) => {\r\n    //console.log('TraerTurno')\r\n    this.setState({codTurno: TurnoCod,\r\n                   msjConfirmar: true});\r\n    \r\n  };\r\n\r\n  TraerFecha = (fechaTurno) => {\r\n    //console.log('TraerFecha');\r\n    //console.log(moment(fechaTurno).format('YYYY-MM-DD'));\r\n    \r\n    \r\n    var AbuscarTurno= this.state.turnosDisponibles.filter(turno => moment(turno.fecha).format('YYYY-MM-DD') === moment(fechaTurno).format('YYYY-MM-DD'));\r\n    \r\n    //console.log('AbuscarTurno');\r\n    //console.log(AbuscarTurno);\r\n\r\n    this.setState({ fechaEstudio: moment(fechaTurno).format('YYYY-MM-DD'),\r\n                    fechaSeleccionada: true,\r\n                    turnoAbuscarHora: AbuscarTurno\r\n                  });\r\n    \r\n  };\r\n\r\n  valueToState = ({ id, value, checked, type, name }) => {\r\n    this.setState({turnoAbuscar: null});\r\n    if (id===\"\") { id=name;}\r\n    this.setState(() => {\r\n      return { [id]: type === \"checkbox\" ? checked : value };\r\n    });\r\n  };\r\n  \r\n  componentDidMount() {\r\n    //console.log('El componente está disponible en el DOM');\r\n    //console.log(moment().format());\r\n    //console.log(moment().format('YYYY-MM-DD'));\r\n    // inicio\r\n    //this.setState({fechaEstudio: \"2019-01-15\",});\r\n    this.setState({ pacienteLocal: this.props.PacienteLocal,\r\n                    UsuarioLogueado: this.props.UsuarioLogueado,\r\n                  });\r\n  }\r\n\r\n  async validar() {\r\n    //console.log('validar');\r\n    \r\n    this.setState({ fechaEstudio: null,\r\n                    loading:true,\r\n                  });\r\n    if (this.state.optionEstudio === 'estudio' && this.state.codEstudio !== null ){\r\n      //console.log('validar Estudio Correcto');\r\n      await this.traerTurnosEstudios();\r\n      if (this.state.turnosDisponibles !== null) {\r\n\r\n        this.setState({ fechaSeleccionada:false,\r\n                        turnoAbuscar: true});\r\n      }\r\n      \r\n    }\r\n\r\n    if (this.state.optionEstudio === 'prestador' && this.state.codPrestador !== null ){\r\n      //console.log('validar Prestador Correcto');\r\n      await this.traerTurnosPrestador();\r\n      if (this.state.turnosDisponibles !== null) {\r\n\r\n        this.setState({ fechaSeleccionada:false,\r\n                        turnoAbuscar: true});\r\n      }\r\n      \r\n    }\r\n\r\n    if (this.state.optionEstudio === 'especialidad' && this.state.codEspecialidad !== null ){\r\n      //console.log('validar Especialidad Correcto');\r\n      await this.traerTurnosEspecialidad();\r\n      if (this.state.turnosDisponibles !== null) {\r\n\r\n        this.setState({ fechaSeleccionada:false,\r\n                        turnoAbuscar: true});\r\n      }\r\n    }\r\n    \r\n    this.setState({ loading:false,\r\n      });\r\n  } \r\n\r\n  tipoTurno() {\r\n    var respuesta;\r\n\r\n    switch(this.state.optionEstudio) {\r\n      case \"estudio\":\r\n        respuesta = 1;\r\n        break;\r\n      case \"prestador\":\r\n        respuesta = 2;\r\n        break;\r\n      case \"especialidad\":\r\n        respuesta = 3;\r\n        break;\r\n      default:\r\n        respuesta = 0;\r\n    }\r\n\r\n    return respuesta;\r\n  }\r\n  async traerTurnosEstudios () {\r\n  \r\n    //console.log('traerTurnosEstudios');\r\n    //console.log(`${urlRest}TurnosEquipo/?mutual=${this.state.pacienteLocal.mutual}&estudio=${this.state.codEstudio}`);\r\n    var TurnosEstudios = null;\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${this.state.UsuarioLogueado.token}`}\r\n    };\r\n    await axios.get(`${urlRest}Turnos/TurnosEquipo/?mutual=${this.state.pacienteLocal.mutual}&estudio=${this.state.codEstudio}`, config)\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n            if ( response.data.length !== 0 ){\r\n              \r\n              //console.log(response.data.length);\r\n              TurnosEstudios = response.data\r\n              //this.setState({turnos: response.data,});\r\n\r\n              //console.log('turnos');\r\n              //console.log(this.state.turnos);\r\n              //this.render();\r\n            } else {\r\n              TurnosEstudios=null;\r\n            }\r\n\r\n        })\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n\r\n        if (TurnosEstudios === null){\r\n          //alert('No hay turnos libres');\r\n          var mensajeError = this.state.mensajeError;\r\n          mensajeError['open'] = true;\r\n          mensajeError['msj'] = 'No hay turnos libres';\r\n          \r\n          this.setState({ turnosDisponibles: TurnosEstudios,\r\n                          mensajeError: mensajeError,\r\n            });\r\n\r\n          \r\n        } else {\r\n          this.setState({ fechasTurnos:this.AgruparArrayFecha(TurnosEstudios),\r\n                          turnosDisponibles: TurnosEstudios,});\r\n        }\r\n   \r\n  }\r\n\r\n  async traerTurnosPrestador () {\r\n  \r\n    //console.log('traerTurnosPrestador');\r\n    //console.log(`${urlRest}TurnosPrestador/?mutual=${this.state.pacienteLocal.mutual}&prestador=${this.state.codPrestador}`);\r\n    var TurnosPrestador = null;\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${this.state.UsuarioLogueado.token}`}\r\n    };\r\n\r\n    await axios.get(`${urlRest}Turnos/TurnosPrestador/?mutual=${this.state.pacienteLocal.mutual}&prestador=${this.state.codPrestador}`,config)\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n            if ( response.data.length !== 0 ){\r\n              \r\n              //console.log(response.data.length);\r\n              TurnosPrestador = response.data\r\n              //this.setState({turnos: response.data,});\r\n\r\n              //console.log('turnos');\r\n              //console.log(this.state.turnos);\r\n              //this.render();\r\n            } else {\r\n              TurnosPrestador=null;\r\n            }\r\n\r\n        })\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n\r\n        if (TurnosPrestador === null){\r\n          alert('No hay turnos libres');\r\n          this.setState({ turnosDisponibles: TurnosPrestador,});\r\n        } else {\r\n          this.setState({ fechasTurnos:this.AgruparArrayFecha(TurnosPrestador),\r\n                          turnosDisponibles: TurnosPrestador,});\r\n        }\r\n   \r\n  }\r\n\r\n  async traerTurnosEspecialidad () {\r\n  \r\n    //console.log('traerTurnosEspecialidad');\r\n    //console.log(`${urlRest}TurnosPrestador/?mutual=${this.state.pacienteLocal.mutual}&especialidad=${this.state.codEspecialidad}`);\r\n    var TurnosEspecialidad = null;\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${this.state.UsuarioLogueado.token}`}\r\n    };\r\n\r\n    await axios.get(`${urlRest}Turnos/TurnosPrestador/?mutual=${this.state.pacienteLocal.mutual}&prestador=${this.state.codEspecialidad}`,config)\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n            if ( response.data.length !== 0 ){\r\n              \r\n              //console.log(response.data.length);\r\n              TurnosEspecialidad = response.data\r\n              //this.setState({turnos: response.data,});\r\n\r\n              //console.log('turnos');\r\n              //console.log(this.state.turnos);\r\n              //this.render();\r\n            } else {\r\n              TurnosEspecialidad=null;\r\n            }\r\n\r\n        })\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n\r\n        if (TurnosEspecialidad === null){\r\n          //alert('No hay turnos libres');\r\n          var mensajeError = this.state.mensajeError;\r\n          mensajeError['open'] = true;\r\n          mensajeError['msj'] = 'No hay turnos libres';\r\n          \r\n          this.setState({ turnosDisponibles: TurnosEspecialidad,\r\n                          mensajeError: mensajeError,\r\n            });\r\n        } else {\r\n          this.setState({ fechasTurnos:this.AgruparArrayFecha(TurnosEspecialidad),\r\n                          turnosDisponibles: TurnosEspecialidad,});\r\n        }\r\n   \r\n  }\r\n\r\n  AgruparArrayFecha (miarray) {\r\n    let Fechas = [];\r\n\r\n    miarray.forEach(item => {\r\n      if (Fechas.length === 0 || Fechas.length === undefined) {\r\n        Fechas.push({fecha:item.fecha});\r\n      } else {\r\n        let indice = Fechas.findIndex(itemBuscado => itemBuscado.fecha === item.fecha);\r\n        if (indice === -1) {\r\n          Fechas.push({fecha:item.fecha});\r\n        }\r\n      }\r\n  });\r\n    \r\n    return Fechas;\r\n  }\r\n\r\n  async actualizarTurno () {\r\n    //console.log(`actualizarTurno`);\r\n    //console.log(Paciente);\r\n    let actualizarTurnoEstado = 0;\r\n    let estudioCod = null;\r\n    let url;\r\n\r\n    let respuesta = '';\r\n    \r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${this.state.UsuarioLogueado.token}`}\r\n    };\r\n    \r\n    if(this.state.optionEstudio ===\"estudio\") {\r\n      estudioCod = this.state.codEstudio;\r\n      url= `${urlRest}Turnos/DarTurno/${this.state.codTurno.codigo}`;\r\n    } else {\r\n      estudioCod = null;\r\n      url= `${urlRest}Turnos/DarTurno/${this.state.codTurno.codigo}`;\r\n    }\r\n\r\n    \r\n      //console.log(`Actualizar`);\r\n      //console.log(url);\r\n\r\n     \r\n\r\n      await axios.put(url, {\r\n        codigo: this.state.codTurno.codigo, //Codigo Turno\r\n        paciente: this.state.pacienteLocal.codigo,  //Codigo Paciente\r\n        estudio: estudioCod,  // si es estudio, codigo Estudio, sino Null\r\n        mutual: this.state.pacienteLocal.mutual, //codigo Mutual\r\n        dioturno: this.state.UsuarioLogueado.codigo, // Codigo Usuario\r\n      }, config)\r\n      .then(function (response) {\r\n        //console.log('response');\r\n        //console.log(response);\r\n        actualizarTurnoEstado = response.status;\r\n        respuesta = response.data;\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.log('error');\r\n        console.log(error.response);\r\n      }); \r\n    \r\n      //this.state.optionEstudio ===\"estudio\"\r\n\r\n    if (actualizarTurnoEstado === 200) {\r\n      //console.log('actualizarTurnoEstado === 200');\r\n      //console.log(respuesta)\r\n      if (respuesta === 'OK') {\r\n        \r\n        this.setState({msjTurnoConfirmadoMsj: 'El turno se Registro Correctamente',\r\n                    msjTurnoConfirmado: true,\r\n          });\r\n      } else {\r\n        this.setState({msjTurnoConfirmadoMsj: respuesta,\r\n                    msjTurnoConfirmado: true,\r\n          });\r\n      }\r\n      \r\n    } else {\r\n      \r\n      this.setState({msjTurnoConfirmadoMsj: 'Error al Registrar Turno vuelve a intentar en un segundo',\r\n                    msjTurnoConfirmado: true,\r\n          });\r\n    }\r\n\r\n  }\r\n  \r\n  \r\n\r\n//<pre>{JSON.stringify(this.state, null, 2)}</pre>\r\n  render() {\r\n\r\n    return (\r\n      <Grid fluid>\r\n        \r\n        <Row>\r\n          <Col xs={12} md={12}>\r\n            <Card >\r\n              <CardContent className=\"TurnoDetalleCard\">\r\n                <form>\r\n                  <Row>\r\n                    <Col xs={12} md={5}>\r\n                    {\r\n                      this.state.optionEstudio === \"estudio\" ?\r\n                        <div className=\"TurnoDetalleSelect\">\r\n                          <AutocompletarEstudio onSelectEstudio={this.TraerEstudio}/>\r\n                        </div>\r\n                        :\r\n                          this.state.optionEstudio === \"prestador\" ?\r\n                          <div className=\"TurnoDetalleSelect\">\r\n                            <AutocompletarPrestador onSelectPrestador={this.TraerPrestador}/>\r\n                          </div>\r\n                          :\r\n                          <div className=\"TurnoDetalleSelectEspecialidad\">\r\n                            <AutocompletarEspecialidad onSelectEspecialidad={this.TraerEspecilidad}/>\r\n                          </div>  \r\n                    }\r\n                    </Col>\r\n                    <Col xs={12} md={2}>\r\n                      <FormControl className=\"TurnoDetalleOption\">\r\n                        <RadioGroup\r\n                        name=\"optionEstudio\"\r\n                        value={this.state.optionEstudio}\r\n                        onChange={event => this.valueToState(event.target)}\r\n                        >\r\n                          <FormControlLabel className=\"TurnoDetalleOptionLabel\"\r\n                            value=\"estudio\"\r\n                            control={<Radio color=\"primary\" />}\r\n                            label=\"Estudio\"\r\n                            \r\n                          />\r\n                          <FormControlLabel className=\"TurnoDetalleOptionLabel\"\r\n                            value=\"prestador\"\r\n                            control={<Radio color=\"primary\" />}\r\n                            label=\"Prestador\"\r\n                          />\r\n                          <FormControlLabel className=\"TurnoDetalleOptionLabel\"\r\n                            value=\"especialidad\"\r\n                            control={<Radio color=\"primary\" />}\r\n                            label=\"Especialidad\"\r\n                          />\r\n                          \r\n                        </RadioGroup>\r\n                        \r\n                      </FormControl>\r\n                    </Col>\r\n                    <Col xs={12} md={3}>\r\n                      <div className=\"TurnoDetalleFecha\">\r\n                         Fecha\r\n                         {\r\n                            this.state.fechaEstudio !== null ? \r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                              {moment(this.state.fechaEstudio).format('DD/MM/YYYY')}\r\n                            </Typography>\r\n                            :\r\n                            <p></p>\r\n                         }\r\n                        \r\n                      </div>\r\n                    </Col>\r\n                    <Col xs={12} md={2}>\r\n                      <div className= \"wrapper\">\r\n                        <Button variant=\"contained\" color=\"primary\" \r\n                          \r\n                          onClick={() => { this.validar() }}\r\n                          disabled={this.state.loading}\r\n                          >\r\n                          Buscar\r\n                        </Button>\r\n                        {this.state.loading && <CircularProgress size={24} className=\"buttonProgress\" />}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </form>\r\n                <Row>\r\n                  <Col xs={12} md={12}>\r\n                  {\r\n                      this.state.turnoAbuscar !== null ?\r\n                        this.state.fechaSeleccionada ?\r\n                          <div>\r\n                            <TurnosHorarios \r\n                            Abuscar={this.state.turnoAbuscarHora}\r\n                            onSelectTurno={this.TraerTurno}\r\n                            />\r\n                          </div>\r\n                          :\r\n                          <div>\r\n                            <TurnoDias \r\n                            Abuscar={this.state.fechasTurnos}\r\n                            onSelectFecha={this.TraerFecha}\r\n                            />\r\n                          </div>\r\n                        :\r\n                        <p></p>\r\n                    }\r\n                    \r\n                  </Col>\r\n                </Row>\r\n              </CardContent>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Dialog\r\n        open={this.state.msjConfirmar}\r\n        onClose={this.CerrarmsjConfirmar}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Desea Confirmar el Turno?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n            {\r\n              this.state.optionEstudio ===\"estudio\" ?\r\n                `Para el dia  ${moment(this.state.fechaEstudio).format('DD/MM/YYYY')} y la hora ${moment(this.state.codTurno.hora).format('HH:mm')} ` +\r\n                `, para el estudio: ${this.state.estudioNombre} en el equipo : ${this.state.codTurno.equipoNom}.`\r\n                \r\n              :\r\n                `Para el dia ${moment(this.state.fechaEstudio).format('DD/MM/YYYY')} y la hora ${moment(this.state.codTurno.hora).format('HH:mm')}, ` +\r\n                `para el prestador :  ${this.state.codTurno.prestadorNom}.`\r\n            }\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.CerrarmsjConfirmar} color=\"primary\">\r\n              No\r\n            </Button>\r\n            <Button onClick={this.ConfirmarmsjConfirmar} color=\"primary\" autoFocus>\r\n              Si\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog //Turno Confirmado\r\n        open={this.state.msjTurnoConfirmado}\r\n        onClose={this.CerrarmsjTurnoConfirmado}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\" >\r\n            <Row>\r\n              <Col xs={12} md={12}>\r\n                {this.state.msjTurnoConfirmadoMsj}\r\n                <p></p>\r\n              </Col>\r\n            </Row>\r\n            <Row end=\"xs\">\r\n              <Col xs={12} md={12}>\r\n                <Button onClick={this.CerrarmsjTurnoConfirmado} color=\"primary\">\r\n                  OK\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </DialogTitle>\r\n        </Dialog>\r\n        <Dialog //Mensaje Error\r\n        open={this.state.mensajeError.open}\r\n        onClose={this.CerrarmsjError}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\" >\r\n            <Row>\r\n              <Col xs={12} md={12}>\r\n                {this.state.mensajeError.msj}\r\n                <p></p>\r\n              </Col>\r\n            </Row>\r\n            <Row end=\"xs\">\r\n              <Col xs={12} md={12}>\r\n                <Button onClick={this.CerrarmsjError} color=\"primary\">\r\n                  OK\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </DialogTitle>\r\n        </Dialog>\r\n    </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnoDetalle;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport '../App.css';\r\nimport TurnoDetalle from '../turnoDetalle/turnosDetalle';\r\n\r\n\r\n/*import MenuIcon from '@material-ui/icons/Menu';*/\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nclass Turno extends Component {\r\n  \r\n\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n    pacienteLocal:null,\r\n    UsuarioLogueado:null,\r\n      };\r\n  }\r\n  componentDidMount() {\r\n    //console.log('El componente está disponible en el DOM Turnos');\r\n    //console.log(this.props.location.Paciente);\r\n    \r\n    if (this.props.location.Paciente === undefined || this.props.location.Paciente.codigo === null || this.props.location.Paciente.codigo === undefined) {\r\n      if (this.props.location.Usuario === null || this.props.location.Usuario === undefined) {\r\n\r\n      } else {\r\n        this.setState({ UsuarioLogueado: this.props.location.Usuario,\r\n        });\r\n      }\r\n    }else{\r\n    this.setState({ pacienteLocal: this.props.location.Paciente,\r\n                    UsuarioLogueado: this.props.location.Usuario,\r\n                  });\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    //console.log('historia', this.props.history);\r\n    //console.log('locación', this.props.location);\r\n    //console.log('match', this.props.match);\r\n    //console.log('Pacientesss', this.state.pacienteLocal);\r\n    \r\n    return (\r\n      <Grid fluid>\r\n        { this.state.UsuarioLogueado == null ?\r\n          <div>\r\n            <p>Debe ingresar Usuario, ir a</p>\r\n            <button onClick={() => { this.props.history.push({ pathname: '/'})}} >login</button>\r\n          </div>\r\n          : \r\n          this.state.pacienteLocal == null?\r\n           <div>\r\n            <p>No se registro el Paciente</p>\r\n            <button onClick={() => { this.props.history.push({ pathname: '/paciente', Usuario: this.state.UsuarioLogueado})}} >Volver</button>\r\n           </div>\r\n          :\r\n          <Row>\r\n            <Col xs={12} md={12}>\r\n              <Card >\r\n                <CardHeader\r\n                  title= {'Paciente HC: ' + this.state.pacienteLocal.documentoNro + ' - ' + this.state.pacienteLocal.apellido + ', ' + this.state.pacienteLocal.nombre}\r\n                  subheader={'Mutual: ' + this.state.pacienteLocal.mutual + ' - ' + this.state.pacienteLocal.mutualNombre}\r\n                />\r\n                <CardContent>\r\n                <Row>\r\n                  <Col xs={10} md={10}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                      Turnos\r\n                    </Typography>\r\n                  </Col>\r\n                  <Col xs={2} md={2} end=\"xs\">                  \r\n                    <Icon color=\"error\" style={{ fontSize: 30 }}>\r\n                      add_circle\r\n                    </Icon>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs={12} md={12}>\r\n                    <TurnoDetalle\r\n                    PacienteLocal={this.state.pacienteLocal}\r\n                    UsuarioLogueado={this.state.UsuarioLogueado}\r\n                    ></TurnoDetalle>\r\n                  </Col>\r\n                </Row>\r\n              </CardContent>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} md={3}>\r\n            <Button variant=\"contained\" color=\"primary\" \r\n            onClick={() => { this.props.history.push({ pathname: '/paciente', Usuario: this.state.UsuarioLogueado }) }}\r\n            >\r\n              Volver\r\n            </Button> \r\n          </Col>\r\n        </Row>\r\n      }\r\n    </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Turno);","import React, { Component } from 'react';\n\nclass PageError extends Component {\n  render() {\n    return (\n      <div className=\"page\">\n        <p>Página no encontrada</p>\n      </div>\n    );\n  }\n}\n\nexport default PageError;\n","import React, { Component } from 'react';\n\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport '../App.css';\n\n\n/*import MenuIcon from '@material-ui/icons/Menu';*/\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport cyan from '@material-ui/core/colors/cyan';\n\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { urlRest } from '../datos/Config';\nimport axios from 'axios';\n\n/*\nconst ButtonVerde = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(cyan[500]),\n    backgroundColor: cyan[500],\n    margin: '5px',\n    //minWidth: 30,\n    width: '250px',\n    height: '50px',\n    '&:hover': {\n      backgroundColor: cyan[700],\n    },\n  },\n}))(Fab);\n*/\n\nconst ButtonVerde = withStyles(theme => ({\n  root: {\n    color: 'white',\n    background: 'linear-gradient(45deg, #21d4fd 10%, #b721ff 80%)',\n    //background: 'linear-gradient(right, #21d4fd, #b721ff, #21d4fd, #b721ff)',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px',\n    //minWidth: 30,\n    width: '250px',\n    height: '50px',\n    '&:hover': {\n      backgroundColor: cyan[700],\n    },\n  },\n}))(Fab);\n\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Usuario: {  usuario: '',\n                  password: '',\n                  token: '',\n                  nombre:'',\n      },\n      errorUsuario:false,\n      errorPassword:false,\n      errorPasswordMsj:'',\n      cargandoLogin:false,\n    };\n      \n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  valueToState = ({ id, value }) => {\n    let LoginUsuario = {};\n    \n    this.setState({ errorUsuario: false,\n                    errorPassword: false,\n      })\n\n    LoginUsuario['usuario']= this.state.Usuario.usuario;\n    LoginUsuario['password']= this.state.Usuario.password;\n    LoginUsuario['token']= this.state.Usuario.token;\n    \n    LoginUsuario[id]= value;\n\n    this.setState({\n      Usuario: LoginUsuario,\n    });\n  };\n\n  \n  componentDidMount() {\n    //console.log('El componente está disponible en el DOM');\n    //console.log('componentDidMount');\n    //console.log(this.state.cargandoLogin);\n    //console.log(moment().format());\n    //console.log(moment().format('YYYY-MM-DD'));\n    // inicio\n    sessionStorage.removeItem('AppOfertaTurnoToken');\n    //console.log(this.urlRest);\n  }\n\n  componentWillReceiveProps(next_props) {\n    //console.log('componentWillReceiveProps');\n\n  }\n  handleSubmit(event) {\n    //console.log('handleSubmit');\n    //console.log(event);\n    this.setState({cargandoLogin: true,\n      \n      });\n    this.Login();\n    \n    event.preventDefault();\n    // do some login logic here, and if successful:\n    \n  }\n\n  Login = () => {\n    //console.log('Login');\n\n    if (this.state.Usuario.usuario !== '' && this.state.Usuario.password !== '')\n    {\n      this.loginUsuario();\n      \n    } else {\n      if (this.state.Usuario.usuario === '') {\n        this.setState({errorUsuario: true,});\n      }\n      if (this.state.Usuario.password === '') {\n        this.setState({errorPassword: true,\n                      errorPasswordMsj: 'Debe ingresar Password'\n                      });\n      }\n    };\n    \n  }\n\n  async loginUsuario () {\n    //console.log(`loginUsuario`);\n    let LoginUsuario = {};\n    let LoginUsuarioEstado = 0;\n    let LoginUsuarioToken = '';\n      //console.log(`${urlRest}usuarios/?usuario=${this.state.Usuario.usuario}&password=${this.state.Usuario.password}`);\n        \n      await axios.post(`${urlRest}usuarios/login/`, {\n          nombreUsuario: this.state.Usuario.usuario,\n          password:this.state.Usuario.password,\n        })\n        .then(function (response) {\n          //console.log('response');\n          //console.log(response);\n          //console.log(response.data.token);\n          LoginUsuarioEstado = response.status;\n          LoginUsuarioToken = response.data.token;\n          sessionStorage.setItem('AppOfertaTurnoToken', LoginUsuarioToken);\n        })\n        .catch(function (error) {\n          console.log('error');\n          console.log(error.response);\n        }); \n        var config = {\n          headers: {'Authorization': `Bearer ${LoginUsuarioToken}`}\n        };\n\n        //console.log(`${urlRest}usuarios?usuario=${this.state.Usuario.usuario}`);\n        //console.log(config);\n        await axios.get(`${urlRest}usuarios?usuario=${this.state.Usuario.usuario}`, config )\n        .then(response => {\n          //console.log('respuesta');\n          //console.log(response);\n           //Datos Usuario\n          LoginUsuario['usuario']= this.state.Usuario.usuario;\n          LoginUsuario['password']= this.state.Usuario.password;\n          LoginUsuario['token']= LoginUsuarioToken\n          LoginUsuario['nombre']= response.data[0].nombreCompleto;\n          LoginUsuario['codigo']= response.data[0].codigo;\n        })\n        .catch(e => {\n            // Podemos mostrar los errores en la consola\n            console.log('Error');\n            console.log(e.response);\n        });\n\n      if (LoginUsuarioEstado === 200) {\n        //console.log('LoginUsuarioEstado === 200');\n        //console.log(LoginUsuario);\n        this.props.history.push({ pathname: '/paciente', Usuario: LoginUsuario });\n      } else {\n        this.setState({ errorPassword: true,\n                        errorPasswordMsj: 'Usuario o Password incorrecto',\n                        cargandoLogin:false,\n          });\n      }\n      \n    \n}\n\n\n  \n  render() {\n    \n    return (\n      <Grid fluid>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"LoginFondo\">\n            <Row center=\"xs\">\n              <Col xs={12} sm={5} md={4} >\n                <Card >\n                  <CardContent className=\"LoginCard\">\n                      <Row center=\"xs\" className=\"LoginCabecera\">\n                        <Typography variant=\"h4\" gutterBottom>\n                          Login\n                        </Typography>\n                      </Row>\n                      <Row center=\"xs\" className=\"LoginIcono\">\n                        <Icon  style={{ fontSize: 80 }}>\n                          account_circle\n                        </Icon>\n                      </Row>\n                      <Row center=\"xs\" className=\"LoginUsuario\">\n                        <Col xs={12} sm={10}>\n                          <TextField\n                            id=\"usuario\"\n                            label=\"Usuario\"\n                            value={this.state.Usuario.usuario} \n                            onChange={event => this.valueToState(event.target)}\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            autoFocus\n                            autoComplete='off'\n                          />\n                          {\n                            this.state.errorUsuario ?\n                            <p>Debe ingresar Usuario</p>:\n                            <p></p>\n                          }\n                        </Col>\n                      </Row>\n                      <Row center=\"xs\" className=\"LoginPassword\">\n                        <Col xs={12} sm={10}>\n                          <TextField\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            value={this.state.Usuario.password} \n                            onChange={event => this.valueToState(event.target)}\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                          />\n                          {\n                            this.state.errorPassword ?\n                            <p>{this.state.errorPasswordMsj}</p>:\n                            <p></p>\n                          }\n                        </Col>\n                      </Row>\n                      <Row center=\"xs\">\n                        <div className=\"LoginBoton\">\n                          { this.state.cargandoLogin ?\n                            <CircularProgress />\n                          :  \n                            <ButtonVerde \n                            variant=\"extended\" \n                            type=\"submit\"\n                            \n                            >\n                            Login\n                            </ButtonVerde>\n                          }\n                        </div>\n                      </Row>\n                  </CardContent>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </form>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport '../App.css';\r\n\r\n\r\n/*import MenuIcon from '@material-ui/icons/Menu';*/\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport MaterialTable from 'material-table';\r\n\r\nimport axios from 'axios';\r\nimport { urlRest } from '../datos/Config';\r\nimport * as moment from 'moment';\r\n\r\n//import Typography from '@material-ui/core/Typography';\r\n//import Icon from '@material-ui/core/Icon';\r\n\r\nvar token = '';\r\n\r\n\r\nclass BuscarporNombre extends Component {\r\n  \r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n    pacientesBusqueda: [],\r\n    UsuarioLogueado:null,\r\n    nombreBuscar:'',\r\n    loading:false,\r\n    pacientesCargados:false\r\n      };\r\n    \r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  \r\n  validar() {\r\n    this.setState({ loading:true,\r\n    });\r\n    this.traerPacientes(this.state.nombreBuscar);\r\n  }\r\n\r\n  BuscarPacientes(Busqueda) {\r\n    this.setState({ loading:true,\r\n    });\r\n    this.traerPacientes(Busqueda);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    \r\n    this.traerPacientes(this.state.nombreBuscar);\r\n    event.preventDefault();\r\n    // do some login logic here, and if successful:\r\n  }\r\n\r\n\r\ntraerPacientes (nombre) {\r\n  \r\n  var config = {\r\n    headers: {'Authorization': `Bearer ${token}`}\r\n  };\r\n  var  Pacientes = [];\r\n  \r\n    if (nombre.length >= 4) {\r\n      //console.log(`${urlRest}pacientes/?nombre=${nombre}`);\r\n      //console.log(config);\r\n      axios.get(`${urlRest}pacientes/?nombre=${nombre}`, config )\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n          if ( response.data.length !== 0 ){\r\n            var i;\r\n            for (i = 0; i < response.data.length; i++) { \r\n              //response.data[i].nombre;\r\n                Pacientes[i] = {\r\n                  codigo : (response.data[i].codigo !== null)?response.data[i].codigo:'',\r\n                  hc : (response.data[i].hc !== null)?response.data[i].hc:'',\r\n                  nombre : (response.data[i].nombre !== null)?response.data[i].nombre:'',\r\n                  apellido : (response.data[i].apellido !== null)?response.data[i].apellido:'',\r\n                  mutual : (response.data[i].mutualNombre !== null)?response.data[i].mutualNombre:'',\r\n                  nacimiento : (response.data[i].nacimiento !== null)?moment(response.data[i].nacimiento).format('YYYY-MM-DD'):'1990-01-01',\r\n                };\r\n           \r\n              \r\n              }\r\n            \r\n                this.setState({\r\n                  pacientesBusqueda:Pacientes,\r\n                  pacientesCargados:true,\r\n                  loading:false,\r\n                });\r\n\r\n            \r\n            }\r\n          }\r\n        )\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n        });\r\n    } else {\r\n      alert('Debe ingresar al menos 4 caracteres');\r\n      this.setState({\r\n        loading:false,\r\n      });\r\n    }\r\n          \r\n  }\r\n\r\n\r\n  valueToState = ({ id, value, checked, type }) => {\r\n    //console.log('valueToState');\r\n\r\n    this.setState(() => {\r\n      return { [id]: type === \"checkbox\" ? checked : value };\r\n    });\r\n  };\r\n\r\n  seleccionarPacientes (seleccion) {\r\n      //alert(\"Usted selecciono \" + seleccion.hc);\r\n      this.props.history.push({ pathname: '/paciente', Usuario: this.state.UsuarioLogueado, PacienteDni: seleccion.hc }) \r\n  }\r\n\r\n  handleKeyPress(key) {\r\n    //console.log('handleKeyPress');\r\n    //console.log(key);\r\n    \r\n    if (key.key ==='Enter') {\r\n      this.validar()\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    //console.log('El componente está disponible en el DOM');\r\n    //console.log('Inicio');\r\n    //console.log(this.props.location.Usuario);\r\n    token = sessionStorage.getItem(\"AppOfertaTurnoToken\");\r\n\r\n    if (this.props.location.Usuario !== undefined) {\r\n      this.setState({ UsuarioLogueado: this.props.location.Usuario,\r\n                      nombreBuscar:  this.props.location.Busqueda,\r\n      });\r\n    }\r\n    if (this.props.location.Busqueda !== undefined && this.props.location.Busqueda !== null && this.props.location.Busqueda !== '') {\r\n      //console.log('Busqueda');\r\n      //console.log(this.props.location.Busqueda);\r\n      this.BuscarPacientes(this.props.location.Busqueda)\r\n    }\r\n   \r\n  }\r\n  //<pre>{JSON.stringify(this.state, null, 2)}</pre>\r\n\r\nrender() {\r\n  //console.log('render paciente');\r\n  return (\r\n    <Grid fluid>\r\n      \r\n        <Row>\r\n          <Col xs={12} md={12}>\r\n            <Card >\r\n              <CardHeader\r\n                title=\"Buscar Paciente por Nombre\"\r\n                \r\n              />\r\n              <CardContent>\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <Row>\r\n                    <Col xs={12} md={12}>\r\n                      <Card >\r\n                        <CardContent>\r\n                          <Row>\r\n                              <Col xs={12} md={9}>\r\n                                  <TextField\r\n                                    id=\"nombreBuscar\"\r\n                                    label=\"Ingrese Nombre a Buscar\"\r\n                                    margin=\"normal\"\r\n                                    autoComplete='off'\r\n                                    value={this.state.nombreBuscar}\r\n                                    autoFocus \r\n                                    required\r\n                                    fullWidth\r\n                                    onChange={event => this.valueToState(event.target)}\r\n                                    onKeyPress={event => this.handleKeyPress(event)}\r\n                                  />\r\n                              </Col>\r\n                              \r\n                              <Col xs={12} md={3}>\r\n                                <div className= \"wrapper\">\r\n                                  <Button variant=\"contained\" color=\"primary\"\r\n                                  size=\"large\"\r\n                                  disabled={this.state.loading}\r\n                                  onClick={() => { this.validar() }}\r\n                                  >\r\n                                    Buscar\r\n                                  </Button> \r\n                                  {this.state.loading && <CircularProgress size={24} className=\"buttonProgress\" />}\r\n                                </div>\r\n                              </Col>\r\n                          </Row>\r\n                          \r\n                          <Row>\r\n                            { this.state.pacientesCargados ?\r\n                              <Col xs={12} >\r\n                                <div style={{ maxWidth: '100%' }}>\r\n                                  <MaterialTable\r\n                                    title=\"Pacientes\"\r\n                                    columns={[\r\n                                      { title: 'H.C.', field: 'hc' },\r\n                                      { title: 'Nombre', field: 'nombre' },\r\n                                      { title: 'Apellido', field: 'apellido' },\r\n                                      { title: 'Mutual', field: 'mutual' },\r\n                                      \r\n                                      \r\n                                      \r\n                                    ]}\r\n                                    data={this.state.pacientesBusqueda}        \r\n                                    actions={[\r\n                                      {\r\n                                        icon: 'done',\r\n                                        tooltip: 'Seleccionar paciente',\r\n                                        onClick: (event, rowData) => this.seleccionarPacientes(rowData)\r\n                                      }\r\n                                    ]}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                            :\r\n                              <p></p>\r\n                            }\r\n                            <Col xs={12} md={3}>\r\n                              <Button variant=\"contained\" color=\"primary\" \r\n                              onClick={() => { this.props.history.push({ pathname: '/paciente', Usuario: this.state.UsuarioLogueado }) }}\r\n                              >\r\n                                Volver\r\n                              </Button> \r\n                            </Col>\r\n                          </Row>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </form>\r\n              </CardContent>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n    </Grid>\r\n    \r\n  );\r\n}\r\n}\r\n\r\n\r\nexport default BuscarporNombre;","import React, { Component } from 'react';\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport '../App.css';\r\n\r\n\r\n/*import MenuIcon from '@material-ui/icons/Menu';*/\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport MaterialTable from 'material-table';\r\n\r\nimport axios from 'axios';\r\nimport { urlRest } from '../datos/Config';\r\nimport * as moment from 'moment';\r\n\r\nvar token = '';\r\n\r\nclass TurnoPaciente extends Component {\r\n  \r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n    paciente: null,\r\n    UsuarioLogueado:null,\r\n    turnos:[],\r\n    turnoBorrar:{\r\n      fecha:null,\r\n      hora:null,\r\n    },\r\n    ventanaModal:false,\r\n    msjTurnoConfirmado:false,\r\n    msjTurnoConfirmadoMsj: '',\r\n    loading:true,\r\n      };\r\n\r\n    \r\n    \r\n    //this.handleBlur = this.handleBlur.bind(this);\r\n    \r\n  }\r\n\r\n  \r\n\r\n\r\ntraerTurnoPacientes (codigo) {\r\n  //console.log('traerTurnoPacientes');\r\n  if (this.paciente !== null) {\r\n    var Turnos = [];\r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${token}`}\r\n    };\r\n    \r\n      //console.log(`${urlRest}Turnos/TurnosPaciente/?paciente=${codigo}`);\r\n      //console.log(config);\r\n      axios.get(`${urlRest}Turnos/TurnosPaciente/?paciente=${codigo}`, config )\r\n        .then(response => {\r\n          //console.log('respuesta');\r\n          //console.log(response);\r\n            if ( response.data.length !== 0 ){\r\n              var i;\r\n              for (i = 0; i < response.data.length; i++) { \r\n                //response.data[i].nombre;\r\n                  Turnos[i] = {\r\n                    codigo : (response.data[i].codigo !== null)?response.data[i].codigo:'',\r\n                    fecha : (response.data[i].fecha !== null)?moment(response.data[i].fecha).format('DD/MM/YYYY'):'01/02/2010',\r\n                    hora : (response.data[i].hora !== null)?moment(response.data[i].hora).format('HH:MM'):'10:00',\r\n                    prestador: (response.data[i].equipoCod !== 0)?response.data[i].equipoNom:response.data[i].prestadorNom,\r\n                    estudio : (response.data[i].estudioNom !== null)?response.data[i].estudioNom:'',\r\n                    dioTurno : (response.data[i].dioTurno !== null)?response.data[i].dioTurno:'',\r\n                    aCancelar : (response.data[i].aCancelar !== null)?response.data[i].aCancelar:false,\r\n                    mutual : (response.data[i].mutualNom !== null)?response.data[i].mutualNom:'',\r\n                  };\r\n            \r\n                \r\n                }\r\n              \r\n              this.setState({\r\n                turnos:Turnos,\r\n                loading:false,\r\n              });\r\n              \r\n              //console.log(response.data[0].nombre);\r\n        }\r\n        })\r\n        .catch(e => {\r\n            // Podemos mostrar los errores en la consola\r\n            console.log('Error');\r\n            console.log(e.response);\r\n            this.setState({\r\n              loading:false,\r\n            });\r\n        });\r\n      }  \r\n      \r\n    this.setState({\r\n        loading:false,\r\n      });\r\n  }\r\n\r\n  async cancelarTurno () {\r\n    //console.log(`actualizarTurno`);\r\n    //console.log(Paciente);\r\n    let cancelarTurnoEstado = 0;\r\n    let url;\r\n\r\n    let respuesta = '';\r\n    \r\n    var config = {\r\n      headers: {'Authorization': `Bearer ${token}`}\r\n    };\r\n    \r\n    url= `${urlRest}Turnos/Cancelar/${this.state.turnoBorrar.codigo}`;\r\n\r\n    \r\n      //console.log(`Actualizar`);\r\n      //console.log(`${urlRest}Turnos/DarTurno/${this.state.codTurno.codigo}`);\r\n      \r\n\r\n      await axios.put(url, {\r\n        \r\n      }, config)\r\n      .then(function (response) {\r\n        //console.log('response');\r\n        //console.log(response);\r\n        cancelarTurnoEstado = response.status;\r\n        respuesta = response.data;\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.log('error');\r\n        console.log(error.response);\r\n      }); \r\n    \r\n      //this.state.optionEstudio ===\"estudio\"\r\n\r\n    if (cancelarTurnoEstado === 200) {\r\n      //console.log('actualizarTurnoEstado === 200');\r\n      //console.log(respuesta)\r\n      if (respuesta === 'OK') {\r\n        \r\n        this.setState({msjTurnoConfirmadoMsj: 'El turno se Cancelo Correctamente',\r\n                    msjTurnoConfirmado: true,\r\n          });\r\n        this.QuitarTurno(this.state.turnoBorrar.codigo);\r\n\r\n      } else {\r\n        this.setState({msjTurnoConfirmadoMsj: respuesta,\r\n                    msjTurnoConfirmado: true,\r\n          });\r\n      }\r\n      \r\n    } else {\r\n      \r\n      this.setState({msjTurnoConfirmadoMsj: 'Error al cancelar Turno vuelve a intentar en un segundo',\r\n                    msjTurnoConfirmado: true,\r\n          });\r\n    }\r\n\r\n  }\r\n\r\n  valueToState = ({ id, value, checked, type }) => {\r\n    //console.log('valueToState');\r\n\r\n    this.setState(() => {\r\n      return { [id]: type === \"checkbox\" ? checked : value };\r\n    });\r\n  };\r\n\r\n  \r\n\r\n  imprimir (seleccion) {\r\n    alert(\"Usted imprime \" + seleccion);\r\n  }\r\n\r\n  CerrarmsjTurnoConfirmado = () => {\r\n    this.setState({msjTurnoConfirmado: false,\r\n    });\r\n  }\r\n\r\n  borrar (seleccion) {\r\n    //console.log('borrar');\r\n    //console.log(seleccion);\r\n    //alert(\"Usted borra \" + seleccion);\r\n    this.setState({ turnoBorrar: seleccion,\r\n                    ventanaModal:true,\r\n    });\r\n  }\r\n\r\n  CerrarModal = () => {\r\n    alert(\"Usted no borra \");\r\n    this.setState({ ventanaModal:false,\r\n    });\r\n  }\r\n\r\n  ConfirmarModal = () => {\r\n    //alert(\"Usted borra \");\r\n    this.setState({ ventanaModal:false,\r\n    });\r\n    this.cancelarTurno();\r\n\r\n    \r\n    //console.log('Turno Registrado');\r\n  }\r\n\r\n  QuitarTurno = (codTurno) => {\r\n    //console.log('QuitarTurno');\r\n    var TurnosFiltro= this.state.turnos.filter(turno => turno.codigo !== codTurno);\r\n    \r\n    //console.log(TurnosFiltro);\r\n    //console.log(AbuscarTurno);\r\n\r\n    this.setState({ turnos: TurnosFiltro,\r\n                  });\r\n    \r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n    //console.log('El componente está disponible en el DOM');\r\n    //console.log('Inicio');\r\n    //console.log(this.props.location.Usuario);\r\n    token = sessionStorage.getItem(\"AppOfertaTurnoToken\");\r\n    if (this.props.location.Usuario !== undefined) {\r\n      //console.log('this.props.location.Usuario');\r\n      this.setState({ UsuarioLogueado: this.props.location.Usuario,\r\n      });\r\n    }\r\n    if (this.props.location.Paciente !== undefined) {\r\n      //console.log('this.props.location.Paciente');\r\n      this.setState({ paciente: this.props.location.Paciente,\r\n      });\r\n\r\n      this.traerTurnoPacientes(this.props.location.Paciente.codigo);\r\n    }\r\n    \r\n  }\r\n\r\n  //<pre>{JSON.stringify(this.state, null, 2)}</pre>\r\n\r\n  \r\nrender() {\r\n  //console.log('render paciente');\r\n  return (\r\n    <Grid fluid>\r\n        <Row>\r\n          <Col xs={12} md={12}>\r\n            <Card >\r\n              <CardHeader\r\n                title=\"Turno del Paciente\"\r\n                subheader =\r\n                  {\r\n                    this.state.paciente === null ?\r\n                      \"Paciente\"\r\n                    :\r\n                      `${this.state.paciente.apellido}, ${this.state.paciente.nombre}`\r\n                  }\r\n              />\r\n              <CardContent>\r\n                { this.state.loading ?\r\n                  <div className=\"TurnoPacienteLoading\">\r\n                    <CircularProgress size={80} className=\"buttonProgress\" />\r\n                  </div>\r\n                :\r\n                  <Row>\r\n                    <Col xs={12} >\r\n                      <div style={{ maxWidth: '100%' }}>\r\n                        <MaterialTable\r\n                          title=\"Turnos\"\r\n                          columns={[\r\n                            { title: 'Fecha', field: 'fecha' },\r\n                            { title: 'Hora', field: 'hora' },\r\n                            { title: 'Mutual', field: 'mutual' },\r\n                            { title: 'Prestador/Equipo', field: 'prestador' },\r\n                            { title: 'Estudio', field: 'estudio' },\r\n                           \r\n                            \r\n                          ]}\r\n                          data={this.state.turnos}   \r\n                          actions={[\r\n                            rowData => ({\r\n                              icon: 'delete',\r\n                              tooltip: 'Cancelar Turno',\r\n                              onClick: (event, rowData) =>this.borrar(rowData),\r\n                              disabled: !rowData.aCancelar\r\n                            })\r\n                          ]}     \r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col xs={12} md={3}>\r\n                      <Button variant=\"contained\" color=\"primary\" \r\n                      onClick={() => { this.props.history.push({ pathname: '/paciente', Usuario: this.state.UsuarioLogueado, PacienteDni: this.state.paciente.documentoNro }) }}\r\n                      >\r\n                        Volver\r\n                      </Button> \r\n                    </Col>\r\n                  </Row>\r\n                }\r\n              </CardContent>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Dialog\r\n        open={this.state.ventanaModal}\r\n        onClose={this.CerrarModal}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Desea Cancelar el Turno?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n            {\r\n              `Para el dia ${this.state.turnoBorrar.fecha} a la hora ${this.state.turnoBorrar.hora} con ${this.state.turnoBorrar.prestador}.` \r\n            }\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.CerrarModal} color=\"primary\">\r\n              No\r\n            </Button>\r\n            <Button onClick={this.ConfirmarModal} color=\"primary\" autoFocus>\r\n              Si\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog //Turno cancelado confirmacion\r\n        open={this.state.msjTurnoConfirmado}\r\n        onClose={this.CerrarmsjTurnoConfirmado}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\" >\r\n            <Row>\r\n              <Col xs={12} md={12}>\r\n                {this.state.msjTurnoConfirmadoMsj}\r\n                <p></p>\r\n              </Col>\r\n            </Row>\r\n            <Row end=\"xs\">\r\n              <Col xs={12} md={12}>\r\n                <Button onClick={this.CerrarmsjTurnoConfirmado} color=\"primary\">\r\n                  OK\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </DialogTitle>\r\n        </Dialog>\r\n\r\n    </Grid>\r\n    \r\n  );\r\n}\r\n}\r\n\r\n\r\nexport default TurnoPaciente;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Paciente from './paciente/paciente';\nimport Turno from './turno/turnos';\nimport PageError from './PageError/PageError';\nimport Login from './login/login';\nimport BuscarporNombre from './buscarporNombre/buscarporNombre';\nimport TurnoPaciente from './turnoPaciente/turnoPaciente';\n\n\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              component={Login} />\n            <Route\n              exact\n              path=\"/Paciente\"\n              component={Paciente} />\n            <Route\n              exact\n              path=\"/Turno\"\n              component={Turno} />\n            <Route\n              exact\n              path=\"/BuscarporNombre\"\n              component={BuscarporNombre} />\n            <Route\n              exact\n              path=\"/TurnoPaciente\"\n              component={TurnoPaciente} />\n            <Route component={PageError} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}